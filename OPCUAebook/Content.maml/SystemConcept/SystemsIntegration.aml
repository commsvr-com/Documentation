<?xml version="1.0" encoding="utf-8"?>
<topic id="0fdc84ce-5ad9-45ce-a040-95478279f604" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
 <summary>
 <para>Optional summary abstract</para>
 </summary>
 -->
    <introduction>
      <autoOutline/>
      <para>
      Complexity of modern automation systems requires adequate task allocation to the distributed control subsystems. They have to cooperate in order to complete common business target function. Each subsystem (as a component) must communicate with others. This is the critical condition regardless of the system architecture. This structure is strongly dependent on organization culture, type of technology and target process. Communication is necessary for exchanging data for production state analysis, operation actions scheduling, supervisory control and task synchronization in the process as a large whole. Optimal communication has to meet real-time system requirements. It means, that time is a crucial notion which must be taken into consideration at the very beginning of the process control design stage.
    </para>
    </introduction>
    <section address="System_Integration">
      <title>System Integration</title>
      <content>
        <para>
        In the process control industry a typical simplified hierarchical information architecture involves the following levels:
      </para>
        <list class="bullet">
          <listItem>
            <para>Process and Business Management: where systems dedicated to support resource management, customer and supplier relations are located. The main task of systems like that is state analysis, support of the decision process, parameters tuning, infrastructure administration and support of activities planning. The most popular systems constituting this layer are ERP (Enterprise Resource Planning), SAP (Systems Analysis and Product), SCM (Supply Chain Management), PLM (Product Lifecycle Management)</para>
          </listItem>
          <listItem>
            <para>Process control systems: are generally responsible for commanding and operations scheduling to control the process as a whole. They include all types of production visualization and supervision systems and their main task is process management and monitoring. This layer is naturally an intermediate layer between Process and Business Management and Field management layers. Typical systems located on this level are: MES (Manufacturing Execution Systems), SCADA (Supervisory Control And Data Acquisition), HMI (Human Machine Interface).</para>
          </listItem>
          <listItem>
            <para>Field Management contains digital plant floor devices commanding and regulating the real-time process locally, using feedback. In a distributed process we can distinguish autonomous islands of automation, whose cooperation has to be harmonized by a supervisory system. Usually, the main function of this layer is accomplished using PLC (Programmable Logic Controller) or DCS (Distributed Control System) class products.</para>
          </listItem>
        </list>
        <mediaLink>
          <caption placement="after" lead="Figure 1">Hierarchical information architecture</caption>
          <image placement="center" xlink:href="8e7f6212-95a9-4b6b-922c-0f049fb0452b" />
        </mediaLink>
        <para>All layers don’t have clearly defined borders of competence, but vertical communication to the process layer components is always necessary. This communication requires that the following issues are solved:</para>
        <list class="bullet">
          <listItem>
            <para>Providing of an appropriate reliability level. In a distributed process control architecture infrastructure, communication paths to key components should be doubled (redundant) to keep the connection if one of them fails. In the simplest case, this kind of security means that we need to simultaneously transfer data over both of them. The main drawback to this approach is a waste of the bandwidth, because we need to transfer the same repeatedly.</para>
          </listItem>
          <listItem>
            <para>Meeting the time limits for delays. Every communication technology has data transfer limits. The more systems use the same technology and the more data is transferred, the greater delays may occur. Delays above a certain limit will cause functional damage.</para>
          </listItem>
          <listItem>
            <para>Necessity for using a diversified communication infrastructure. Continuous development of communication technologies, telecommunication market services and, especially, the withdrawal of old technologies and services is a serious threat for the usability of the system in future if it is inextricably linked with the communication technology. The only way to protect the system is to provide a possibility of seamless replacement of the underlying communication infrastructure.</para>
          </listItem>
          <listItem>
            <para>Necessity of using vendor-specific standards to access process data. To exchange data, two components need to use the same protocol and underlying communication resources. The main challenge is to provide a solution allowing to engage many standards from hundreds available on the process control marketplace at the same time.</para>
          </listItem>
          <listItem>
            <para>Open architecture of the solution. Openness means its independence from vendors and third-party operators. It is a feature essential for safety of the investment. An open system enables seamless expandability or exchangeability of components on all of the previously defined levels independently.</para>
          </listItem>
          <listItem>
            <para>Uniform model of the data presentation. Many components receive and provide data only for their direct users. It means in practice, that we need to transfer the same data over the network simultaneously for all systems. The main feature of effective communication systems is a separation (decoupling) of the data transfer from data processing and publishing. Therefore, received data should be published in an uniform way to allow random access by others components.</para>
          </listItem>
        </list>
      </content>
    </section>
    <section address="Fundamental_problems_of_systems_integration">
      <title>Fundamental problems of systems integration</title>
      <content>
        <para>More then half enterprises which were surveyed in 2006 declared that difficulties with the integration of the existing systems are the most important obstacle to expand the process and business management support.</para>
        <mediaLink>
          <caption placement="after" lead="Figure 2">Top IT Challenges in integration the Plant-Floor and Business Management and Control Layers</caption>
          <image placement="center" xlink:href="1243dfbf-bbed-4d6c-a26a-97d348b26cfb" />
        </mediaLink>
        <para>Other major integration problems are diversification of the existing systems, their quantity and non-unified data architecture. With these problems, it is not easy to accomplish increasingly complex functions and, finally, to obtain an overall process efficiency, which requires quick and robust vertical communication and data exchange between the systems.</para>
      </content>
    </section>
    <relatedTopics>
      <externalLink>
        <linkText>New idea of integration.</linkText>
        <linkAlternateText>Introduction to complex system architecture and data flow requirements in enterprises.</linkAlternateText>
        <linkUri>http://www.commsvr.com/Howitworks/Architecture/Integration.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>
        Chaos – issues of data exchange structure.
      </linkText>
        <linkAlternateText>Main problems of data flow management in an enterprise.</linkAlternateText>
        <linkUri>http://www.commsvr.com/Howitworks/Architecture/Integration/Centralization.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Centralization instead of integration</linkText>
        <linkAlternateText>Why a supersystem is used instead of subsystems integration and what it means for a user.</linkAlternateText>
        <linkUri>http://www.commsvr.com/Howitworks/Architecture/Integration/Centralization.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>Novel architecture of the IT and automation systems integration.</linkText>
        <linkAlternateText>
        The page describes novel architecture dedicated to integrating complex distributed process control with process management systems.
      </linkAlternateText>
        <linkUri>http://www.commsvr.com/Howitworks/Architecture/Integration/Solution.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>
        Process and business layers robust integration - Publication [R080101]
      </linkText>
        <linkAlternateText>The article addresses system integration methodologies and a new Process Observer concept, which is like a bridge connection between the plant-floor, process and business management levels. It discusses at length the main features of robust data exchange in an enterprise, i.e. three-level redundancy, multi-communication capabilities and optimization methods.</linkAlternateText>
        <linkUri>http://www.commsvr.com/DownloadCenter/Publications/RobustIntegration.aspx</linkUri>
      </externalLink>
      <externalLink>
        <linkText>
        Real-Time Communication for Large Scale Distributed Control Systems - Publications [KN20070502]
      </linkText>
        <linkAlternateText>An article and presentation on Real-Time Communication for Large Scale Distributed Control Systems presenting novel architecture and a case study proving that it could be a collaboration platform for several power plants.</linkAlternateText>
        <linkUri>http://www.commsvr.com/DownloadCenter/Publications/KN20070502MPostolManuscript.aspx</linkUri>
      </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>