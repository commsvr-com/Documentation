<?xml version="1.0" encoding="utf-8"?>
<topic id="432a42dd-56d3-40e1-ba4a-a97ac8392f72" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="Section1">
      <title>Optimization of communication paths utilization</title>
      <content>
        <para>Main job of each communication server is to make ‘every effort’ to keep the process data fresh and allow clients to access the data randomly. From the communication point of view, two more or less independent networks can be distinguished in the distributed process control information architecture (Fig. 1):</para>
        <list class="bullet">
          <listItem>
            <para>connecting plant-floor devices to the server;</para>
          </listItem>
          <listItem>
            <para>connecting OPC clients to the server.</para>
          </listItem>
        </list>
        <para>The first one is proprietary, the other is a standard as per OPC specifications – it is obvious, but the question is how the communication processes are related to each other in both the networks mentioned above (Fig. 1). In other words, what relation ( F(x) ) should be applied between sampling rates of individual process variables and update rate of clients connected to the server. So there is a need to address the following questions:</para>
        <list class="bullet">
          <listItem>
            <para>What should be transferred?</para>
          </listItem>
          <listItem>
            <para>When and how often?</para>
          </listItem>
          <listItem>
            <para>Which communication path should be used?</para>
          </listItem>
        </list>
        <para>To design an appropriate sampling scheduling mechanism on the process side we need to take the following into consideration:</para>
        <list class="bullet">
          <listItem>
            <para>Current communication path load and its throughput;</para>
          </listItem>
          <listItem>
            <para>Current real time process state;</para>
          </listItem>
          <listItem>
            <para>Client needs.</para>
          </listItem>
        </list>
        <para>All of them can change in time, therefore <legacyBold><legacyItalic>CommServer</legacyItalic></legacyBold> provides two unique, closely coupled  technologies allowing to build cost-saving, flexible solutions providing the process data just in time and preserving the communication bandwidth.</para>
        <alert>
          <para>CommServer allows to build cost-saving, flexible solutions providing the process data just in time and preserving the communication bandwidth.</para>
        </alert>
        <para>The first one, called <legacyBold><legacyItalic>optimal transfer algorithm</legacyItalic></legacyBold>, is responsible for minimizing difference between the requirements of the clients individual process data update rate and the current sampling rate of a process control unit.</para>
        <para>The other one, called <legacyBold><legacyItalic>adaptive sampling algorithm</legacyItalic></legacyBold>, allows to adjust the plant-floor devices sampling rate according to the current process state. </para>
        <mediaLink>
          <caption placement="after" lead="Figure 1">Data transfer management</caption>
          <image placement="center" xlink:href = "1c201e96-3683-4b7f-9a01-b3ed2852cce2"/>
        </mediaLink>
      </content>
    </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>