<?xml version="1.0" encoding="utf-8"?>
<topic id="13f68a0a-131d-4449-aad2-6118dc43ac77" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="Section1">
      <title>Rapid Development Kit</title>
      <content>
        <para>There are hundreds of vendor specific protocols widely used by the process control industry. Many plant-floor devices manufacturers provide proprietary solutions making the integration process very difficult and error prone. The three types of data providers (mentioned above) support three main functions:</para>
        <list class="bullet">
          <listItem>
            <para>communication of the plant-floor devices data to any client application in a standard way;</para>
          </listItem>
          <listItem>
            <para>monitoring of the hosting and commutation resources;</para>
          </listItem>
          <listItem>
            <para>simulation of the real time process.</para>
          </listItem>
        </list>
        <para>This list is not complete and the diversity of individual application needs causes that the number of off-the-shelf components may be a serious limit. Therefore, CommServer allows to easily develop data providers according to a custom specification. To support this process, a Data Provider Rapid Development Kit is available as a complementary product. This engineering tool consists of a compiled library (a kind of framework) and a source skeleton. The only thing that has to be done is to fill up the skeleton. To make the testing process as simple as possible, the kit provides a dedicated diagnostic tool called XBusMeasure TM . This tool allows to read/write data exactly the same way as it is done by the server, but the configuration is much easier and user dialogs provide all diagnostic information in one place. You can find more information in a separate manual.</para>
        <alert>
          <para><legacyBold><legacyItalic>CommServer</legacyItalic></legacyBold> can be easily equipped with a vendor specific data provider (driver) using RDK.</para>
        </alert>
      </content>
      <!-- If a section contains a sections element, its content creates
           sub-sections.  These are not collapsible.
      <sections>
          <section address="SubSection1">
              <title>Sub-section 1</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
          <section address="SubSection2">
              <title>Sub-section 2</title>
              <content>
                  <para>Sub-section content.</para>
              </content>
          </section>
      </sections> -->
    </section>
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>