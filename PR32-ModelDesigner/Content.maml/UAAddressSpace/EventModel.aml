<?xml version="1.0" encoding="utf-8"?>
<topic id="61bf86cb-8e76-408c-952f-ab6960eb96b8" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
  <link xlink:href="61bf86cb-8e76-408c-952f-ab6960eb96b8" />
  <summary>
    <para>Optional summary abstract</para>
  </summary>
  -->
    <introduction>
      <para>
      This section describes a general purpose eventing system that can be used in many diverse vertical markets.
    </para>
      <para>
      Events represent specific transient occurrences. System configuration changes and system errors are examples of events. Event notifications report the occurrence of an event. Events defined in this document are not directly visible in the <token>OPCUA</token><token>AS</token>. <link xlink:href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35" /> and <link xlink:href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606" /> nodes class can be used to subscribe to events. The EventNotifier attribute of those nodes class identifies if the node allows subscribing to events. Clients subscribe to such nodes to receive notifications of event occurrences.
    </para>
      <para>
      Event subscriptions use the <link xlink:href="ef0092b5-9f31-4e8d-9901-270be06e6577"> monitoring and subscription services</link> to subscribe to event notifications of a node.
    </para>
      <para>
      Any <token>OPCUA</token> server that supports eventing shall expose at least one node as event notifier. The <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49">Server object</link> is used for this purpose. Events generated by the server are available via this Server object.
    </para>
      <para>
      Events may also be exposed through other nodes anywhere in the <token>AS</token>. These nodes (identified via the EventNotifier attribute) provide some subset of the events generated by the server. The position in the <token>AS</token> dictates what this subset will be. For example, a process area object representing a functional area of the process would provide events originating from that area of the process only.
    </para>
      <alert>
        <para>
        This is only an example and it is fully up to the server to determine what events should be provided by which node.
      </para>
      </alert>
    </introduction>
    <section address="EventType">
      <title>Event Types</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
      <autoOutline /> -->
        <para>
        Each event is of a specific event type, i.e. derives from EventType. A server may support many types. The section <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" /> defines <link xlink:href="f430b65b-e139-41d1-a250-269480d3e36c#BaseEventType">BaseEventType</link> that all other event types derive from. It is expected that other specifications will define additional event types deriving from the base types defined in <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" />.
      </para>
        <para>
        The event types supported by a server are exposed in the <token>AS</token> of a server.
      </para>
        <alert>
          <para>
        Event types are represented as <link xlink:href="9d541e15-812b-4dce-9b4c-7b0d66e74daf" /> nodes class in the <token>AS</token> and do not have a special class associated to them. </para>
        </alert>
        <para>
        Section <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49" /> describes how a server exposes the event types in detail.
      </para>
        <para>
        Event types defined in <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" /> are specified as abstract and therefore never instantiated in the <token>AS</token>. Event occurrences of those event types are only exposed via a subscription. Event types exist in the <token>AS</token> to allow clients to discover the event type. This information is used by a client when establishing and working with event subscriptions. Event types defined by the <token>OPCUA</token> specification or companion specifications as well as server specific event types may be defined as not abstract and therefore instances of those event types may be visible in the <token>AS</token> although events of those event types are also accessible via the event notification mechanisms.
      </para>
        <para>
        Standard event types are described in <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" />. Their representation in the <token>AS</token> is described in section <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49" />.
      </para>
      </content>
    </section>
    <section>
      <title>
      Event Categorization
    </title>
      <content>
        <para>
        Events can be categorised by creating new event types which are subtypes of existing event types but do not extend an existing type. They are used only to identify an event as being of the new EventType. For example, the event type DeviceFailureEventType could be subtyped into TransmitterFailureEventType and ComputerFailureEventType. These new subtypes would not add new properties or change the semantic inherited from the DeviceFailureEventType other than purely for categorization of the events.
      </para>
        <para>
        Event sources can also be organised into groups by using the <link xlink:href="57be83ea-0aac-4456-b29a-0b18a8467134"> event reference types</link>. For example, a server may define objects in the <token>AS</token> representing events related to physical devices, or event areas of a plant or functionality contained in the server. Event references would be used to indicate which event sources represent physical devices and which ones represent some server-based functionality. In addition, references can be used to group the physical devices or server-based functionality into hierarchical event areas. In some cases, an event source may be categorised as being both a device and a server function. In this case, two relationships would be established. Refer to the description of the <link xlink:href="57be83ea-0aac-4456-b29a-0b18a8467134#HasEventSource">event reference types</link> for additional examples.
      </para>
        <para>
        Clients can select a category or categories of events by defining content filters that include terms specifying the EventType of the event or a grouping of event sources. The two mechanisms allow for a single event to be categorised in multiple manners. A client could obtain all events related to a physical device or all failures of a particular device.
      </para>
      </content>
    </section>
    <relatedTopics>
      <link xlink:href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35" />
      <link xlink:href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606" />
      <link xlink:href="ef0092b5-9f31-4e8d-9901-270be06e6577" />
      <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49" />
      <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" />
      <link xlink:href="9d541e15-812b-4dce-9b4c-7b0d66e74daf" />
      <link xlink:href="57be83ea-0aac-4456-b29a-0b18a8467134" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>