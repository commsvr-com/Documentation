<?xml version="1.0" encoding="utf-8"?>
<topic id="8b9a8e27-5e10-4422-89fa-cb80dd9f8395" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="View">
      <title>View</title>
      <content>
        <para>Underlying systems are often large and clients often have an interest in only a specific subset of the data. They do not need, or want, to be burdened with viewing Nodes in the Address Space for which they have no interest. </para>
          <para>To address this problem, The OPC Unified Architecture specification defines the concept of a View. Each View defines a subset of the Nodes in the Address Space. The entire Address Space is the default View. Each Node in a View may contain only a subset of its References, as defined by the creator of the View. The View Node acts as the root for the Nodes in the View.</para>
      </content>
    </section>
      <section address="ViewPropertyGridDescription">
          <title>View property grid description</title>
          <content>
              <mediaLink>
                  <caption placement="after" lead="Figure 1">View property grid</caption>
                  <image placement="center" xlink:href = "212b36cb-a402-448f-bd68-788df2bcfbe9"/>
              </mediaLink>
              <para>View properties:</para>
              <list class="ordered">
                  <listItem>
                      <para>Browse Name - the name used in the information model.  The validator will create the BrowseName automatically from the SymbolicName. The BrowseName is qualified by the namespace used for the SymbolicName.</para>
                  </listItem>
                  <listItem>
                      <para>Description – optionally, a vendor specific description is provided. The validator automatically creates a generic Description from the BrowseName and NodeClass. </para>
                  </listItem>
                  <listItem>
                      <para>Key – an optional key that can be used to look up the Description for other locales in a resource DB.</para>
                  </listItem>
                  <listItem>
                      <para>Value – the value of the Description attribute for the Node</para>
                  </listItem>
                  <listItem>
                      <para>Display Name – a human readable name for the Node. The validator automatically creates the DisplayName from the BrowseName.</para>
                  </listItem>
                  <listItem>
                      <para>Key – an optional key that can be used to look up the display name for other locales in a resource DB.</para>
                  </listItem>
                  <listItem>
                      <para>Value – the value of the Display Name.</para>
                  </listItem>
                  <listItem>
                      <para>IsDeclaration - this flag indicates that the Node is defined elsewhere and no code will be generated. Nodes that are declarations do not need to be completely defined. They only need to have the information required to generate code for nodes that reference it (e.g. the BaseType).</para>
                  </listItem>
                  <listItem>
                      <para>StringId - an alternate unique identifier for the node. It is used instead of the NumericId if it is specified in the CSV input file.</para>
                  </listItem>
                  <listItem>
                      <para>Symbolic Name  - identifies the Node within the ModelDesign or within the containing Node. The SymbolicName should always be specified. It is used to create the BrowseName and SymbolicId if they are not specified.</para>
                  </listItem>
                  <listItem>
                      <para>Is Empty - indicates whether the Symbolic Name is empty.</para>
                  </listItem>
                  <listItem>
                      <para>Name – a name which is a part of the Symbolic Name.</para>
                  </listItem>
                  <listItem>
                      <para>Namespace – a namespace which qualifies the Name from the Symbolic Name.</para>
                  </listItem>
                  <listItem>
                      <para>Write access - a bit mask that indicates, which attributes are writeable. Optionally the WriteMask Attribute can be provided. If the WriteMask Attribute is provided, it shall set all Attributes to not writeable that are not said to be vendor-specific. For example, the Description Attribute may be set to writeable since a Server may provide a server-specific description for the Node. The NodeId shall not be writeable, because it is defined for each Node in specification.</para>
                  </listItem>
                  <listItem>
                      <para>Contains no loops - if set to “true” this Attribute indicates that following References in the context of the View contains no loops, i.e. starting from a Node “A” contained in the View and following the forward References in the context of the View Node “A” will not be reached again. It does not specify that there is only one path starting from the View Node to reach a Node contained in the View If set to “false” this Attribute indicates that following References in the context of the View may lead to loops.</para>
                  </listItem>
                  <listItem>
                      <para>Supports events - the value indicating whether the Object class node supports events.</para>
                  </listItem>
              </list>
          </content>
      </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>