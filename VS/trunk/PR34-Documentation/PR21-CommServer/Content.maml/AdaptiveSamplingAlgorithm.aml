<?xml version="1.0" encoding="utf-8"?>
<topic id="5e52ef36-fda2-4cd3-9a26-fdfa1c62d4fc" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="AdaptiveSamplingAlgorithm">
      <title>Adaptive sampling algorithm</title>
      <content>
        <para>According to the OPC specification, the scanner module is responsible for keeping the cached data fresh, but it is worth stressing that “freshness” of the data depends on the process state and can change in time drastically. The communication server (in order to optimize the data transfer costs) should adapt the sampling rate to current process control needs. To achieve this, CommServer uses an algorithm called <legacyBold><legacyItalic>adaptive sampling algorithm</legacyItalic></legacyBold> (ASA).</para>
        <para>To illustrate that the meaning of the data “freshness” is not obvious, let's analyze the needs of a remote process control of a heat chamber – a node in the heat distribution network, as an example.  It works like a kitchen tap – generally is opened or closed - controlling the flow of water. But there are some differences, actually dimension of the pipe is typically 900mm and water flow (about 6000t/h) is controlled by at least 4 valves equipped with actuators working synchronously in a sequence. In this application their states have to be monitored and controlled remotely (up to 20km). The chamber can be in one of the four available states:</para>
        <list class="bullet">
          <listItem>
            <para>Closed</para>
          </listItem>
          <listItem>
            <para>Opening</para>
          </listItem>
          <listItem>
            <para>Opened</para>
          </listItem>
          <listItem>
            <para>Closing</para>
          </listItem>
        </list>
        <para>The state sequence is illustrated in the figure (Fig. 1).</para>
        <mediaLink>
          <caption placement="after" lead="Figure 1">Diagram of valve states</caption>
          <image placement="center" xlink:href = "b74f234c-356a-4fb6-a537-a7921f228cf2"/>
        </mediaLink>
        <para>Typically, the chamber is opened or closed – it means that these states last for a long time - days or even months. Because these states are pretty stable and cannot be disturbed, the time between snapshots (raw data) of the process can be measured in hours. We must face other requirements when any of the valves is in a transient position: opening or closing.  It usually lasts for a few minutes only and can be recognized as a special or alarm state. In this case, the movement raw data sampling rate should guarantee a delay less than a few seconds to allow a safe remote control of the valves. In the worse case approach we would have to transfer a lot of useless data most of the time. </para>
        <para>To address this problem, the sampling scheduling mechanism built in the CommServer communication engine adapts continuously the scanning policy according to the controlled real time process state (Fig. 2). According to the real time process state the raw process data sampling rate is adjusted.</para>
        <alert>
          <para><legacyBold><legacyItalic>Adaptive sampling algorithm</legacyItalic></legacyBold> preserves communication paths bandwidth and costs.</para>
        </alert>
        <mediaLink>
          <caption placement="after" lead="Figure 2">Adaptive  sampling algorithm</caption>
          <image placement="center" xlink:href = "bef35982-f690-41e9-90c2-c5f0ee11345d"/>
        </mediaLink>
      </content>
    </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>