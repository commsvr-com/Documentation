<?xml version="1.0" encoding="utf-8"?>
<topic id="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
  <link xlink:href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606" />
  <summary>
    <para>Optional summary abstract</para>
  </summary>
  -->
    <introduction>
      <para>
      Underlying systems are often large and clients often have an interest in only a specific subset of the data. They do not need, or want, to be burdened with viewing nodes in the <token>AS</token> for which they have no interest.
    </para>
      <para>
      To address this problem, the <token>OPCUA</token> defines the concept of a view. Each view defines a subset of the nodes in the <token>AS</token>. The entire <token>AS</token> is the default view. Each node in a view may contain only a subset of its references, as defined by the creator of the view. Views are defined using the View node class. The View node acts as the root for the nodes in the view.
    </para>
      <para>
      All nodes contained in a view shall be accessible starting from the View node when browsing in the context of the View. The browse may take several hops, i.e. it is not necessary that all containing nodes can be browsed directly from the View node.
    </para>
      <alert>
        <para>
        A View node may not only be used as additional entry point into the <token>AS</token> but as a construct to organize the <token>AS</token> and thus as the only entry point into a subset of the <token>AS</token>.
      </para>
      </alert>
      <para>
      Therefore clients shall not ignore View nodes exposed by a server <token>AS</token>. Simple clients that do not deal with views for filtering purposes can for example handle a View node like an object of type <link xlink:href="b6fbace7-8f12-4c47-8dd2-d9223336254b#FolderType">FolderType</link> (see  <link xlink:href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35" /> ).
    </para>
      <para>
      The View node class inherits the base attributes from the <link xlink:href="467e8ac2-46d8-4758-8965-a891200787ee" /> node class. It also defines two additional attributes:
    </para>
      <list class="bullet">
        <listItem>
          <para>ContainsNoLoops - is set to false if the server is not able to identify if the view contains loops or not.</para>
        </listItem>
        <listItem>
          <para>EventNotifier - identifies if the View can be used to subscribe to events.</para>
        </listItem>
      </list>
      <para>
      To avoid recursion, i.e. getting all events of the server, the Server object node described in section <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49" /> shall never be part of any view since it provides all events of the server.
    </para>
      <para>
      Views are defined by the server. The browsing and querying services defined in section <link xlink:href="ef0092b5-9f31-4e8d-9901-270be06e6577" /> expect the <link xlink:href="546f49d5-8153-434c-9e74-d7835d7862bc#NodeId">NodeId</link> attribute of a View node to provide these services in the context of the View node.
    </para>
      <para>
        <link xlink:href="57be83ea-0aac-4456-b29a-0b18a8467134#HasProperty">HasProperty</link> references are used to identify the properties of a View node. The property NodeVersion is used to indicate the version of the View node. The ViewVersion property indicates the version of the content of the View object. In contrast to the NodeVersion, the ViewVersion property is updated even if nodes not directly referenced by the View node are added to or deleted from the View. This property is optional because it might not be possible for servers to detect changes in the view contents. Servers may also generate a ModelChangeEvent, described in <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" />, if nodes are added to or deleted from the View node. There are no additional properties defined for View nodes class in this document, but additional properties for the View nodes may be defined.
    </para>
      <alert>
        <para>
        Views can be the source node of any hierarchical reference. They shall not be the source node of any non-hierarchical reference.
      </para>
      </alert>
    </introduction>
    <section>
      <title>ContainsNoLoops Attribute</title>
      <content>
        <para>
        The mandatory ContainsNoLoops attribute is set to false if the server is not able to identify if the view contains loops or not.
      </para>
      </content>
    </section>
    <section>
      <title>EventNotifier Attribute</title>
      <content>
        <para>
        The mandatory EventNotifier attribute identifies if the View can be used to subscribe to events that either occur in the content of the view or as model change events of the content of the View or to read / write the history of the events. A View node that supports events shall provide all events that occur in any object used as event notifier that is part of the content of the view. In addition, it shall provide all model change events that occur in the context of the View.
      </para>
      </content>
    </section>
    <relatedTopics>
      <link xlink:href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35" />
      <link xlink:href="467e8ac2-46d8-4758-8965-a891200787ee" />
      <link xlink:href="3f999f23-4ad7-46a4-80dd-ab33729d5f49" />
      <link xlink:href="ef0092b5-9f31-4e8d-9901-270be06e6577" />
      <link xlink:href="2191d1e7-9793-4eee-a180-a59b249f1098" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>