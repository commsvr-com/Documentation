<?xml version="1.0" encoding="utf-8"?>
<topic id="44047fc0-68d9-4a40-a46c-838e3d6f57d6" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="InformationModel">
      <title>Information model</title>
      <content>
        <para>The primary objective of the OPC UA server is to expose information that can be used by clients to manage an underlying real-time process and the entire enterprise as a large whole with the main challenge of integrating systems and management resources into one homogenous environment. Information describes the state and behavior of the process and the server must be able to transfer it in both directions. The main challenge of the OPC UA information model is to support this transfer in a unique and transparent means in spite of the process complexity and roles of clients in the enterprise management hierarchy. </para>
          <para>Information is an abstract knowledge; therefore it cannot be directly processed by physical machines. To make information capable of being processed, it must be represented as a set of words (terminals) first. To be transferable on the wire, the terminals must be a stream of bits and since the representation should be human readable, the terminals are usually strings. All allowed terminals make up a vocabulary. To define the relationship between information and representation on the one-to-one basis, we need syntax and semantics. Syntax defines rules of the vocabulary usage, and semantics maps valid terminals concatenations (sentences) to the associated piece of information.</para>
          <para>An information model for OPC Unified Architecture is such a collection of vocabulary, syntax and semantics.  This collection plays a role similar to high level programming languages that describe data structures and an algorithm to be executed by the processor. One of the fundamental differences is that a program has a static nature, i.e. it does not change after having been compiled. </para>
          <para>The information model is abstract, which could be surprising, because we know from the above that it is to be used to replace something abstract (information) by a representation that can be processed (terminals concatenation). To strictly follow this requirement, the vocabulary should be binary, but it would make the representation unreadable to a human. To overcome this issue, the information model is based on the alphanumeric alphabet and is associated with mapping rules defining the relationship between the representations. It must be stressed here that the human and computer centric representations are governed by the same semantics.</para>
      </content>
    </section>
    <relatedTopics>
        <link xlink:href="bce14a86-6885-4e62-abb4-0381a3b48df7" />
        <link xlink:href="9e253cad-7b24-425f-950a-0e21a1176342" />
        <link xlink:href="8c3d069f-ae57-4e81-aae9-3fb9bfbe441e" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>