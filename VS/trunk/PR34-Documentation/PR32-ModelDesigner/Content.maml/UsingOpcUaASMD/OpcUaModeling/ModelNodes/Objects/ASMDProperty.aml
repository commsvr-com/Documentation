<?xml version="1.0" encoding="utf-8"?>
<topic id="0a5f357e-6c35-4aa1-bf87-0badbb7f75d0" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
    </introduction>
    <section address="Property">
      <title>Property</title>
      <content>
        <para>Properties are used to define the characteristics of nodes. Properties are defined using the Variable node class. Properties are the leaf of any hierarchy; therefore they shall not be the source node of any hierarchical references. This includes the HasComponent or HasProperty Reference, that is, Properties do not contain Properties and cannot expose their complex structure. However, they may be the SourceNode of any non-hierarchical References. </para>
          <para>The HasTypeDefinition Reference points to the VariableType of the Property. Since Properties are uniquely identified by their BrowseName, all Properties shall point to the PropertyType. </para>
          <para>Properties shall always be defined in the context of another Node and shall be the TargetNode of at least one HasProperty Reference. To distinguish them from data variables, they shall not be the TargetNode of any HasComponent Reference. Thus, a HasProperty Reference pointing to a Variable Node defines this Node as a Property.</para>
      </content>
    </section>
      <section address="PropertyPropertyGridDescription">
          <title>Property property grid description</title>
          <content>
              <mediaLink>
                  <caption placement="after" lead="Figure 1">Property property grid</caption>
                  <image placement="center" xlink:href = "51328d5d-c835-4d22-9a70-1fa2959fcbe3"/>
              </mediaLink>
              <para>Property properties:</para>
              <list class="ordered">
                  <listItem>
                      <para>Max Cardinality - this attribute indicates the maximum number of possibly existing instances of this element.</para>
                  </listItem>
                  <listItem>
                      <para>Min Cardinality - this attribute indicates the minimum number of possibly existing instances of this element. If the element has minimal cardinality greater than 0, it is possible to check that it exists in the instantiated nodes.</para>
                  </listItem>
                  <listItem>
                      <para>Modeling Rule - dependent on the value of these properties specified for the components of a type they are used to create appropriate instances while the parent type is instantiated in the address space. The default value is Mandatory. In this case the component is always created with the values of the attributes derived from the inheritance chain. If the value is None it indicates that this node only belongs to the type and is not used to create an instance while the parent type is instantiated. If the node is not a type component the value of this property is ignored.</para>
                  </listItem>
                  <listItem>
                      <para>Preserve Default Attributes - the value indicating whether to preserve default attributes.</para>
                  </listItem>
                  <listItem>
                      <para>Type Definition - the type of this instance pointed out by the HasTypeDefinition reference.</para>
                  </listItem>
                  <listItem>
                      <para>Default value – the default value of the Type Definition.</para>
                  </listItem>
                  <listItem>
                      <para>Is Empty - indicates if the Type Definition is empty.</para>
                  </listItem>
                  <listItem>
                      <para>Name - name of the TypeDefinition.</para>
                  </listItem>
                  <listItem>
                      <para>Namespace – a namespace that qualifies the name of the TypeDefinition.</para>
                  </listItem>
                  <listItem>
                      <para>Browse Name - a name used in the information model.  The validator will create the BrowseName automatically from the SymbolicName. The BrowseName is qualified by the namespace used for the SymbolicName.</para>
                  </listItem>
                  <listItem>
                      <para>Description – optionally, a vendor specific description is provided. The validator automatically creates a generic Description from the BrowseName and NodeClass. </para>
                  </listItem>
                  <listItem>
                      <para>Key – an optional key that can be used to look up the Description for other locales in a resource DB.</para>
                  </listItem>
                  <listItem>
                      <para>Value – the value of the Description attribute for the Node</para>
                  </listItem>
                  <listItem>
                      <para>Display Name – a human readable name for the Node. The validator automatically creates the DisplayName from the BrowseName.</para>
                  </listItem>
                  <listItem>
                      <para>Key – an optional key that can be used to look up the display name for other locales in a resource DB.</para>
                  </listItem>
                  <listItem>
                      <para>Value – the value of the Display Name.</para>
                  </listItem>
                  <listItem>
                      <para>IsDeclaration - this flag indicates that the Node is defined elsewhere and no code will be generated. Nodes that are declarations do not need to be completely defined. They only need to have the information required to generate code for nodes that reference it (e.g. the BaseType).</para>
                  </listItem>
                  <listItem>
                      <para>StringId - an alternate unique identifier for the node. It is used instead of the NumericId if it is specified in the CSV input file.</para>
                  </listItem>
                  <listItem>
                      <para>Symbolic Name  - identifies the Node within the ModelDesign or within the containing Node. The SymbolicName should always be specified. It is used to create the BrowseName and SymbolicId if they are not specified.</para>
                  </listItem>
                  <listItem>
                      <para>Is Empty - indicates whether the Symbolic Name is empty.</para>
                  </listItem>
                  <listItem>
                      <para>Name –a  name, which is a part of the Symbolic Name.</para>
                  </listItem>
                  <listItem>
                      <para>Namespace – a namespace, which qualifies the Name from the Symbolic Name.</para>
                  </listItem>
                  <listItem>
                      <para>Write access - a bit mask that indicates, which attributes are writeable. Optionally the WriteMask Attribute can be provided. If the WriteMask Attribute is provided, it shall set all Attributes to not writeable that are not said to be vendor-specific. For example, the Description Attribute may be set to writeable since a Server may provide a server-specific description for the Node. The NodeId shall not be writeable, because it is defined for each Node in specification.</para>
                  </listItem>
                  <listItem>
                      <para>Access Level - this property defines a value of the AccessLevel attribute of the VariableType node class. The access level for variables used for type definitions is vendor-specific, for all other variables defined in the specification , the access level shall allow a current read; other settings are vendor specific.</para>
                  </listItem>
                  <listItem>
                      <para>
                          Array Dimensions - if the Value Rank does not identify an array of a specific dimension (i.e. ValueRank <![CDATA[<=]]> 0) the Array Dimensions attribute can either be set to null or the attribute is missing. This behaviour is vendor-specific. If the Value Rank attribute specifies an array of a specific dimension (i.e. ValueRank > 0) then the Array Dimensions attribute shall be specified in the table defining the Variable.
                      </para>
                  </listItem>
                  <listItem>
                      <para>Data Type - the type of the data.</para>
                  </listItem>
                  <listItem>
                      <para>Is Empty - indicates if the DataType is empty.</para>
                  </listItem>
                  <listItem>
                      <para>Name - DataType name.</para>
                  </listItem>
                  <listItem>
                      <para>Namespace – a namespace that qualifies the DataType name.</para>
                  </listItem>
                  <listItem>
                      <para>Default value – the default value of the property</para>
                  </listItem>
                  <listItem>
                      <para>Selected type – the type of the Default value.</para>
                  </listItem>
                  <listItem>
                      <para>Historizing - this attribute indicates whether the Server is actively collecting data for the history of the Property. This differs from the AccessLevel Attribute which identifies if the Property has any historical data. A value of TRUE indicates that the Server is actively collecting data. A value of FALSE indicates the Server is not actively collecting data.</para>
                  </listItem>
                  <listItem>
                      <para>Minimum Sampling Interval - optionally, a vendor-specific minimum sampling interval is provided. It indicates how “current” the Value of the Property will be kept. It specifies (in milliseconds) how fast the server can reasonably sample the value for changes. A MinimumSamplingInterval of 0 indicates that the server is to monitor the item continuously. A MinimumSamplingInterval of -1 means indeterminate.</para>
                  </listItem>
                  <listItem>
                      <para>Value Rank - this Attribute indicates whether the Value Attribute of the Property is an array and how many dimensions the array has. It may have the following values: n>1 - the Value is an array with the specified number of dimensions; OneDimension (1)- the value is an array with one dimension; OneOrMoreDimensions (0) - the value is an array with one or more dimensions. Scalar (-1)- the value is not an array; Any (-2)- the value can be a scalar or an array with any number of dimensions; ScalarOrOneDimension (-3)- the value can be a scalar or a one dimensional array.</para>
                  </listItem>
              </list>
          </content>
      </section>
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>