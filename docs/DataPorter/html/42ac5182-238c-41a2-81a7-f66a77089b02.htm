<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Storing From Opc Into Sql</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Accumulator" /><meta name="System.Keywords" content="Conditional operations" /><meta name="System.Keywords" content="Example" /><meta name="System.Keywords" content="operationdb" /><meta name="System.Keywords" content="operationif" /><meta name="System.Keywords" content="operationopc" /><meta name="System.Keywords" content="SQL Advanced Configuration" /><meta name="System.Keywords" content="SQL Conectivity, Advanced Configuration" /><meta name="System.Keywords" content="SQL Conectivity, Advanced Configuration Parameters" /><meta name="System.Keywords" content="SQL Conectivity, Default Configuration" /><meta name="System.Keywords" content="SQL Conectivity, Example" /><meta name="System.Keywords" content="SQL Conectivity, Troubleshooting" /><meta name="System.Keywords" content="Using many inputs" /><meta name="Microsoft.Help.Id" content="42ac5182-238c-41a2-81a7-f66a77089b02" /><meta name="Description" content="This document describes advanced possibilities of storing the data from OPC into the database. The document is to some extent a continuation of the article titled “Example simple database configuration”." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">DataPorter - ports data between most popular standards (OPC, XML, SQL)<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b8c5f048-bb7e-4742-b7f2-b61a77789ed9.htm" title="DataPorter - ports data between most popular standards (OPC, XML, SQL)" tocid="roottoc">DataPorter - ports data between most popular standards (OPC, XML, SQL)</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b8c5f048-bb7e-4742-b7f2-b61a77789ed9.htm" title="DataPorter" tocid="b8c5f048-bb7e-4742-b7f2-b61a77789ed9">DataPorter</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a5b37bb1-ca47-4770-900e-85b8da61cfe6.htm" title="Configuration" tocid="a5b37bb1-ca47-4770-900e-85b8da61cfe6">Configuration</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/26dd91e2-db6e-4a3a-ac32-a7f14422e466.htm" title="SQL Conectivity" tocid="26dd91e2-db6e-4a3a-ac32-a7f14422e466">SQL Conectivity</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9f3954b0-cc3e-46d1-a3e6-59649db7e738.htm" title="Example simple database configuration" tocid="9f3954b0-cc3e-46d1-a3e6-59649db7e738">Example simple database configuration</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/42ac5182-238c-41a2-81a7-f66a77089b02.htm" title="Storing From Opc Into Sql " tocid="42ac5182-238c-41a2-81a7-f66a77089b02">Storing From Opc Into Sql </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/169261d2-f2b0-43f0-908a-bf6d23099aa1.htm" title="Reading from SQL and copying to OPC" tocid="169261d2-f2b0-43f0-908a-bf6d23099aa1">Reading from SQL and copying to OPC</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f0eee719-9f00-47e8-8c6a-2052ba3f7dfa.htm" title="Advanced DataBase operation block" tocid="f0eee719-9f00-47e8-8c6a-2052ba3f7dfa">Advanced DataBase operation block</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Storing From Opc Into Sql</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com/" title="DataPorter online help" target="_blank">Home</A></span> <div class="introduction"><p>
        This document describes advanced possibilities of storing the data from OPC into the database. The document is to some extent a continuation of the article titled “Example simple database configuration”. We, therefore, recommend that you read about the basics of how to configure storing into the database first.
      </p><div class="mediaCenter"><img alt="Default Configuration Of Dataporter For Storing Into The Database" src="../media/glowny rysunek.jpg" /></div><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Default_Configuration">Default Configuration Of Dataporter For Storing Into The Database</a></li><li class="outlineSectionEntry"><a href="#Detailed_Information">
        Detailed Information About Parameter Configutarion In ”Db Save” Operation Parameter
      </a></li><li class="outlineSectionEntry"><a href="#Example_Configurations">Example Configurations</a></li><li class="outlineSectionEntry"><a href="#Troubleshooting">
        Troubleshooting
      </a></li></ul></div><div class="collapsibleAreaRegion" id="Default_Configuration"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Default Configuration Of Dataporter For Storing Into The Database</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          By default, DataPorter installs the database for which it has preconfigured settings that make data saving possible. Let's take a closer look at the default configuration of the “DB Save” operation block. The operation is configured using XML. The default configuration of the “DB Save” operation assumes that the operation has one input and the following parameter configuration:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAHAEAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAHAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-comment">&lt;!-- such text is comment --&gt;</span>
<span class="highlight-xml-comment">&lt;!-- sample query - the goal of this example is to show how to save in the database value 
of process variable (from OPC), that is connected to first (number: 0) input of the operation. 
Here is beginning of parameter definition  (the whole definition of this parameter must be 
included inside object: "Param") --&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-comment">&lt;!-- operation DB definition, it contains information about the database 
  provider and the connection string (one of the definition is commented to 
  show the difference between attaching the SQLserver hosted database or the file.
object  "operationdb" indicates the it is operation on the database, 
(it is posible to have many "operationdb" definitions inside one "Param"). 
name attribute indicate the right data base providerr (ORACLE, OLEDB, ODBC, MSSQL); 
in this example it is  oracle. The next parameter is connection string, 
this string contains all neccessary informations that are required to connect to the database; 
the syntax depends on the database provider (more details at:http://msdn.microsoft.com). 
In this walkthrough user id: has value: scott, data source=orcl 
(the name of the serviced configured above), password: tiger 
(because password is inside quotations we have to use &amp;quot;).
 --&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;
  AttachDbFilename=|DataDirectory|DataPorterDataBase.mdf;Integrated Security=True;
  Connect Timeout=30;User Instance=True"</span> <span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteNonQuery"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- &lt;operationdb name="MSSQL" connectionstring="Data Source=.\SQLEXPRESS;
    Initial Catalog=DataPorterDataBase;Integrated Security=True" stop="false" 
    type="ExecuteNonQuery" async="false"&gt; --&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- command: in the command object there is definition of query parts; here we have:  
    INSERT INTO OPCDataTable VALUES (getdate(), , which is the beginning of the query, 
    command attribute separator defines the interspace that is used to separate elements 
    (in this example it is coma). 
Structure of the DataBase: 
CREATE TABLE OPCDataTable
(
     [timestamp] [datetime] NOT NULL,
     [name] [nchar](255) NOT NULL,
    [opcvalue] [float] NULL,
    [opcquality] [nchar](20) NULL
)
The function getdate () is the function of SQL server used to obtain current date, 
this current date is inserted as the first filed of the database row.
 --&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>INSERT INTO OPCDataTable VALUES (getdate(),'<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- name of the variable connected to first (#0) input --&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:name"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>', <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- value of the variable connected to first (#0) input --&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>, '<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- value of the quality connected to first (#0) input --&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:quality"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>') <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!-- end of DB query --&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHAEAAA");</script><p>
          At first glance it may seem complicated but when we remove all comments (green text between ” ”) we receive (numbers on the left  side show the line number and they will be of help when describing the parameter):
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFAEAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAFAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">1. <span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
2.   <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
3.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;
         AttachDbFilename=|DataDirectory|DataPorterDataBase.mdf;Integrated Security=True;
         Connect Timeout=30;User Instance=True"</span> <span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteNonQuery"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
4.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>INSERT INTO OPCDataTable VALUES (getdate(),'<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
5.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:name"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
6.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>', <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
7.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
8.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>, '<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
9.      <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:quality"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
10.     <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>') <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
11.     <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
12.   <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFAEAAA");</script><p>
          So, we have in the individual lines:
        </p><ol><li><p>
              a standard definition of an XML document
            </p></li><li><p>
              beginning of parameter definition (the whole parameter definition must be inside the &lt;Param&gt; element)
            </p></li><li><p>&lt;operationdb&gt; element shows that it is an operation of storing into the database (&lt;Param&gt; may include many &lt;operationdb&gt; definitions, but it is only one such an operation in this case). The name  attribute indicates a relevant provider of connection to the database (ORACLE, OLEDB, ODBC, MSSQL); MSSQL in the case concerned. The next parameter is a connection string that describes the method of connection to the database; its syntax must be in conformity with the selected connection provider (for more information visit http://msdn.microsoft.com). The stop parameter means that the operation must be stopped if the current query is unsuccessful; false means continuation. The type parameter shows the query execution method; the following attributes are available: <em>ExecuteNonQuery</em> – to be used  when storing into the database and <em>ExecuteScalar</em> – to be used when reading from the database. async is the last parameter - false in this example, which means that the query is executed synchronously, i.e. DataPorter is waiting for the query result.
            </p></li><li><p>
              the command element defines a fragment of the query to be inserted; here:  INSERT INTO OPCDataTable VALUES (getdate(),', i.e. the beginning of the query; command element defines, what separator will be used to separate the following elements (here: a comma).
            </p></li><li><p>
              a fragment of SQL query: the name of tag connected to 0 input is inserted
            </p></li><li><p>
              a fragment of SQL query: the following characters: close quotation, comma and space are inserted
            </p></li><li><p>
              a fragment of SQL query: the value of tag connected to 0 input is inserted
            </p></li><li><p>
              a fragment of SQL query: the following characters: close quotation, comma and space are inserted
            </p></li><li><p>
              a fragment of SQL query: the quality of tag connected to 0 input is inserted
            </p></li><li><p>
              a fragment of SQL query: the end of the query, i.e. close quotation and bracket are inserted
            </p></li><li><p>
              closing of operationdb element (opened in line 2)
            </p></li><li><p>
              closing of Param element (opened in line 1)
            </p></li></ol><p>
          Finally, thanks to this code, as a result of the operation, connection to the database is established and the following query is executed:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAEAAA_tab1" class="codeSnippetContainerTabSingle">scr</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">INSERT INTO OPCDataTable VALUES
(getdate(),'input[0].name', 'input[0].value', 'input[0].quality')</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAEAAA");</script><p>
          The input[0] parameter means that the query uses the element (tag) connected to the first input of the "DB Save" operation block (but counted from 0); the next fields (here after a dot) show what is put in a given field.
        </p></div><div class="collapsibleAreaRegion" id="Detailed_Information"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />
        Detailed Information About Parameter Configutarion In ”Db Save” Operation Parameter
      </span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The idea of storing into the database in DataPorter makes execution of certain arithmetic operations, conditional operations and storing into the database operations possible.
        </p><p>
          The configuration is saved in Param – in XML form. Inside &lt;Param&gt; there may be the following elements (the number of elements is optional):
        </p><ul><li><p>&lt;operationdb&gt; - operation of storing into the database, the name attribute – selects the database type (ORACLE, OLEDB, ODBC, MSSQL), the connectionstring attribute is used as a definition of connection to the database. It contains information concerning the selected database, user and password. The syntax using the operationdb element for the MS SQL database is shown in the previous section; a similar definition for the Oracle database could be as follows:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABCABDAAA_tab1" class="codeSnippetContainerTabSingle">scr</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABCABDAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABCABDAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABCABDAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">&lt;operationdb name="oracle" connectionstring="user id=scott;data source=orcl;
              password=&amp;quot;tiger&amp;quot;" stop="false"&gt;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABCABDAAA");</script><p>
              In our example an Oracle service named orcl  has been configured. Furthermore, scott user with the tiger password has been activated in the database (it is a standard test user of Oracle). In that definition, user id: has the value of scott, data source=orcl (the name of the service configured previously), password: the password, i.e. tiger (instead of inverted commas, we have &amp;quot; inside the parameter).
            </p></li><li><p>&lt;operationopc&gt; - operations on the values of inputs and the accumulator; the name and type of operation shall be given. Permitted operation types: nop (no operation – an empty operation), assign (assigning to the accumulator), add (addition), sub (subtraction), mul (multiplication), div (division), or (logical or), and (logical and), xor (exclusive or). The following internal elements are possible: input (operation block input), internal (internal value, e.g. parameters connected with time and date; the correct parameter is selected by entering the right value for the “name” attribute; the following values of the name parameter are available: year, month, day, date, dayofweek, hour, millisecond, minute, second, ticks, timeofday, dayofyear), const (numerical constants used for arithmetic operations or accumulator initialization).
            </p></li><li><p>&lt;operationif&gt; - allows us to execute conditional operations; defines the operation name, its type “and” or “or” depending on whether the conjunction “and” or “or” appears between individual comparisons. The following activities are possible inside the operation: reset (resets the comparison result set previously), stopreset (resets the result of operation stop requirement as set previously), greater (is the accumulator value greater than), less (is the accumulator value lower than), equal (does the accumulator value equal), stop (sets the stop requirement according to the comparison results).
            </p></li></ul><h4 class="subHeading" id="DB_Save_operation_block">
            Using the ”DB Save” operation block
          </h4><div class="subsection"><p>
              The ”DB Save” operation block inputs may be used as elements of &lt;operationdb&gt;, &lt;operationopc&gt;. The inputs are numbered from 0, i.e. if the operation has one input only, its number is 0. Reference to the input is shown below:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAAADAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:property"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAAADAAA");</script><p>
              As the name attribute, give the input number (here: 0) and, after a colon (:), the name of the relevant property field. The following fields (properties) are available:
            </p><ul><li><p>
                  name – name of the tag connected to the input, e.g.&lt;input name="0:name"&gt;&lt;/input&gt;</p></li><li><p>
                  value – value of the tag connected to the input, e.g. &lt;input name="0:value"&gt;&lt;/input&gt;</p></li><li><p>
                  quality – quality of the tag connected to the input, e.g. &lt;input name="0:quality"&gt;&lt;/input&gt;</p></li><li><p>
                  timestamp – time stamp of the tag connected to the input, e.g. &lt;input name="0:timestamp"&gt;&lt;/input&gt;</p></li></ul></div></div><div class="collapsibleAreaRegion" id="Example_Configurations"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Example Configurations</span></div><div id="ID3RBSection" class="collapsibleSection"><p /><p>This section contains the following subsections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Using _conditional_operations">
            Using of conditional operations and the accumulator
          </a></li><li class="outlineSectionEntry"><a href="#Using_many_inputs">
            Using many inputs to the ”DB Save” operation blocks
          </a></li></ul><h4 class="subHeading" id="Using _conditional_operations">
            Using of conditional operations and the accumulator
          </h4><div class="subsection"><p>
              The example below shows usage of conditional operations:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABACAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"assign"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">internal</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"minute"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">internal</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationif</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"if"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"and"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">reset</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"none"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">reset</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">less</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"30"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">less</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">greater</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"15"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">greater</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">stop</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">stop</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationif</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-comment">&lt;!-- Data base operation --&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;
  AttachDbFilename=|DataDirectory|DataPorterDataBase.mdf;Integrated Security=True;
  Connect Timeout=30;User Instance=True"</span> <span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteNonQuery"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>INSERT INTO OPCDataTable VALUES (getdate(),'<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:name"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>', <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>, '<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:quality"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>') <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABACAAA");</script><p>
              In our example, the value of current minute from the system timer in the computer is inserted into the accumulator. In the conditional operation, the value of previous comparisons is reset. If the accumulator value (minute) is lower than 30 and greater than 15, the next operations will be executed (storing of data into the database); otherwise, the stop requirement for further operations is set (nothing is stored into the database).
            </p></div><h4 class="subHeading" id="Using_many_inputs">
            Using many inputs to the ”DB Save” operation blocks
          </h4><div class="subsection"><p>
              The example shows using of many inputs to the “DB Save” operation block. We assume that OPCDataDoubleValue of the following structure exists in the database:
            </p><ul><li><p>
                  timestamp [datetime] NOT NULL – here we store the time stamp of the instant when inserting is effected
                </p></li><li><p>
                  opcvaluefirst [float] NULL – here we store (as a real number) the value of the first tag (connected to input 0)
                </p></li><li><p>
                  opcvaluesecond [float] NULL – here we store (as a real number) the value of the second tag (connected to input 1)
                </p></li></ul><p>
              In order to use many inputs, the ”DB Save” operation block must be configures as in the figure below:
            </p><div class="mediaCenter"><img alt="Number of inputs" src="../media/numberofinputs2.jpg" /></div><p>
              Next you can design a transaction so that two elements are connected to the ”DB Save” operation inputs. The figure below shows an example of such a solution:
            </p><div class="mediaCenter"><img alt="2 imputs transaction example" src="../media/transaction_2inputs_example.jpg" /></div><p>
              Now, enter a text similar to the one below as the operation parameter.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAAACAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;
  AttachDbFilename=|DataDirectory|DataPorterDataBase.mdf;Integrated Security=True;
  Connect Timeout=30;User Instance=True"</span> <span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteNonQuery"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>INSERT INTO OPCDataDoubleValue VALUES (getdate(),'<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>', <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">", "</span><span class="highlight-xml-bracket">&gt;</span>') <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAAACAAA");</script><p>
              Such an operation will result in connection to the database and execution of the following query:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAACAAA_tab1" class="codeSnippetContainerTabSingle">scr</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">INSERT INTO OPCDataDoubleValue VALUES
(getdate(),'input[0].value', 'input[1].value')</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAACAAA");</script></div></div><div class="collapsibleAreaRegion" id="Troubleshooting"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />
        Troubleshooting
      </span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          If problems occur (e.g. no entries in the database), examine the application logs, both in the Windows system logs (Menu Start-&gt;Run-&gt;eventvwr.msc) and DataPorter logs ("%ProgramFiles%\CAS\CAS DataPorter\log\DataPorter.log"), where entries should help us find the problem reason.
        </p><p>
          Check also whether the MS SQL database server is configured in a proper way, the integrated authentication is enabled, and the present user has sufficient privileges in the database.
        </p></div></div></div><div id="pageFooter" class="pageFooter">This documentation is designed to be used with CAS DataPorter (this software is available at <A href="http://www.commsvr.com/DownloadCenter/ProductSoftware/PR2605DataPorter_Software.aspx" title="DataPorter - ports data between most popular standards (OPC, XML, SQL) – software installation.">http://www.commsvr.com</A>).<p><a href="http://www.commsvr.com/" target="_blank">Copyright © 2008-2020, CAS, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=DataPorter%20-%20ports%20data%20between%20most%20popular%20standards%20(OPC,%20XML,%20SQL)">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>