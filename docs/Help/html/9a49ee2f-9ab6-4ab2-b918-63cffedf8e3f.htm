<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Optimal transfer algorithm</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="9a49ee2f-9ab6-4ab2-b918-63cffedf8e3f" /><meta name="Description" content="In a typical architecture of remote process control information, we have plant-floor devices on the field side and many applications on the process and business management side." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">CommServer<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2dea0752-d490-47e6-8444-ac73e07601fc.htm" title="CommServer" tocid="roottoc">CommServer</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2dea0752-d490-47e6-8444-ac73e07601fc.htm" title="CommServer" tocid="2dea0752-d490-47e6-8444-ac73e07601fc">CommServer</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a709e1f0-0b6e-42da-8e6d-4a3590ada4c6.htm" title="Theory of operation" tocid="a709e1f0-0b6e-42da-8e6d-4a3590ada4c6">Theory of operation</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/432a42dd-56d3-40e1-ba4a-a97ac8392f72.htm" title="Optimization of communication paths utilization" tocid="432a42dd-56d3-40e1-ba4a-a97ac8392f72">Optimization of communication paths utilization</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/9a49ee2f-9ab6-4ab2-b918-63cffedf8e3f.htm" title="Optimal transfer algorithm" tocid="9a49ee2f-9ab6-4ab2-b918-63cffedf8e3f">Optimal transfer algorithm</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5e52ef36-fda2-4cd3-9a26-fdfa1c62d4fc.htm" title="Adaptive sampling algorithm" tocid="5e52ef36-fda2-4cd3-9a26-fdfa1c62d4fc">Adaptive sampling algorithm</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Optimal transfer algorithm</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com/tabid/55/language/en-US/Default.aspx" title="CommServer online help" target="_blank">Home</A></span> <div class="collapsibleAreaRegion" id="OptimalTransferAlgorithm"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Optimal transfer algorithm</span></div><div id="ID0RBSection" class="collapsibleSection"><p>In a typical architecture of remote process control information, we have plant-floor devices on the field side and many applications on the process and business management side. It is a typical client server access scenario, where the application plays the role of clients reading from and writing to process variables according to their needs. Allowing clients to directly access process data has two main disadvantages: </p><ul><li><p>clients have to speak a language that is proprietary for them and native for plant-floor devices - a protocol;</p></li><li><p>the same data requested by many clients have to be transferred many times over the whole communication path.</p></li></ul><p>Using an intermediate communication server located close to the clients allows to overcome most of the problems. Its main task is to allow transparent access to real time process data by clients. This access has to be bidirectional, but inherently asymmetric. Typically, in this scenario, many clients read the same process data, but to protect the control process consistency only one is allowed to write to process variables. </p><p><strong><em>CommServer</em></strong>has been developed to meet these requirements. It has a modular architecture with tree main layers: scanner, cache and an implementation of the OPC interface. </p><p>The <strong><em>Scanner</em></strong> module is a communication engine responsible for keeping the process data in the cache fresh. The scanner can communicate with remote units in one of two modes: solicited and unsolicited ones. In the solicited mode, it pools all of the remote units on the regular basis sending data requests frames to keep the cached data fresh according to the clients needs. In the unsolicited mode the Scanner listens to the underlying network traffic to get all the packets in promiscuous mode and match them in pairs: request and response to obtain the current value of process variables. In the unsolicited mode, the server can work only passively as one-way data path. It means that it is impossible to write down to remote process devices.</p><div class="mediaCenter"><img alt="Solicited (left side) versus unsolicited (right side) mode" src="../media/solicited_vs_unsolicited.jpg" /><div class="caption"><span class="captionLead">Figure 1:
						</span>Solicited (left side) versus unsolicited (right side) mode</div></div><ul><li><p><strong><em>Cache</em></strong> is an intermediate storage of real time process data. The cache reflects the latest value of the data as well as the quality and timestamp.</p></li><li><p>The <strong><em>OPC Interface</em></strong> module processes all client requests located on the process and business layers. </p></li><li><p>The <strong><em>Server</em></strong> module is responsible for the synchronization of all of them in time.</p></li></ul><p>The communication process managed by the scanner can be interrupted by client direct read/write requests and disturbed by communication errors. Additionally, communication paths redundancy and the adaptive sampling algorithm cause that the load of individual communication route changes in time. Furthermore, we need to deal with “the stupid client” syndrome, where any client unconscious of the limitations unnecessarily requests too high update rate. As the server is an intermediate component in the communication process, it  makes a virtual representation of the very process at the upper layer boundary and, in consequence. The server, having detailed knowledge of the communication limitations and real time process data, has to prevent monopolization of the resources by any malicious client.</p><p><strong><em>CommServer</em></strong> addresses all these issues by providing an optimal transfer algorithm which harmonizes individual sampling rates with client update rate requests to minimize a difference between both of them. </p><p>To minimize communication overhead real time process data are read in blocks. Blocks can be defined in configuration to match the plant-floor devices resources. Moreover, blocks can be grouped. Any group has been assigned a sampling rate and it is scheduled in the sampling queue as one item. This sampling rate is a function of client requests and limitation set in the server configuration. The scheduling algorithm keeps the real time sampling rate as close as possible to the evaluated one, i.e. minimizes the difference between them.</p><p>An overload coefficient is calculated for each group, as the real time sampling rate to the requested sampling rate ratio. To make the scanning process fair, the scheduling algorithm keeps this overload coefficient equal for all groups assigned to the same communication path. This prevents “starvation” disease, i.e. keeping important data fresh causes that update of less important data is not possible at all. </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p><strong><em>Optimal transfer algorithm</em></strong> guarantees that all data is sampled in any circumstances. </p></td></tr></table></div><p>Practically it means that all groups on the same scanning path have the real time sampling rate equal to the requested sampling rate if the overload coefficient is less than 1. If the coefficient is greater than 1 the scheduling algorithm distributes communication path bandwidth proportionally to the requested sampling rate to the groups.</p><p>In some applications we may have another requirement, i.e. a request to keep the bandwidth utilization below a preset limit. For example, that is the case where we use toll network. Additionally, for these systems we provide the possibility of controlling the overload coefficient on the requested level, which  keeps the selected data transfer path below the limits. </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p><strong><em>Optimal transfer algorithm</em></strong> guarantees bandwidth consumption on a preset level.</p></td></tr></table></div></div></div></div><div id="pageFooter" class="pageFooter">This documentation is designed to be used with CAS CommServer (this software is available at <A href="http://www.commsvr.com/index.php/products" title="CommServer -multiprotocol, multichannel, redundant communication server – software installation.">http://www.commsvr.com</A>).<p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2019 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=CommServer">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>