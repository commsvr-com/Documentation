<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Appendix B (Tracing)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="eae686e6-c4c0-4024-9f9b-434886e91661" /><meta name="Description" content="Traces are the publishing of specific messages that are generated during application execution. When using tracing, you must have a mechanism for collecting and recording the messages that are sent. Trace messages are received by listeners." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">CommServer<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2dea0752-d490-47e6-8444-ac73e07601fc.htm" title="CommServer" tocid="roottoc">CommServer</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2dea0752-d490-47e6-8444-ac73e07601fc.htm" title="CommServer" tocid="2dea0752-d490-47e6-8444-ac73e07601fc">CommServer</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/8594c004-2493-45a9-846e-3b54a98a5d9a.htm" title="Appendix" tocid="8594c004-2493-45a9-846e-3b54a98a5d9a">Appendix</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4f52c757-1266-4b00-85be-a77134cb4e98.htm" title="Appendix A (example of a report)" tocid="4f52c757-1266-4b00-85be-a77134cb4e98">Appendix A (example of a report)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/eae686e6-c4c0-4024-9f9b-434886e91661.htm" title="Appendix B (Tracing)" tocid="eae686e6-c4c0-4024-9f9b-434886e91661">Appendix B (Tracing)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Appendix B (Tracing)</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com/tabid/55/language/en-US/Default.aspx" title="CommServer online help" target="_blank">Home</A></span> <div class="collapsibleAreaRegion" id="AppendixB"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />APPENDIX B (TRACING)</span></div><div id="ID0RBSection" class="collapsibleSection"><p>Traces are the publishing of specific messages that are generated during application execution. When using tracing, you must have a mechanism for collecting and recording the messages that are sent. Trace messages are received by listeners. </p></div><div class="collapsibleAreaRegion" id="EnablingTracing"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enabling Tracing</span></div><div id="ID1RBSection" class="collapsibleSection"><p>To enable traces during transaction processing, you should edit application configuration file (‘CASOpcDaWrapper.exe.config’) which is located in the CommServer installation folder (default location: ‘C:\Program Files\CommServer’). </p><div class="tableSection"><table><tr><th><p>Trace Level</p></th><th><p>Description</p></th></tr><tr><td><p>Critical</p></td><td><p>Serious failures, such as the following, have occurred:</p><ul><li><p>An error that can cause an immediate loss of user functionality.</p></li><li><p>An event that requires an administrator to take action to avoid loss of functionality.</p></li><li><p>Code hangs.</p></li></ul><p>This tracing level can also provide sufficient context for interpreting other critical traces. This can help to identify the sequence of operations leading to a serious failure.</p></td></tr><tr><td><p>Error</p></td><td><p>An error (e.g. invalid configuration or network behavior) has occurred that can result in loss of user functionality.</p></td></tr><tr><td><p>Warning</p></td><td><p>A condition exists that can subsequently result in an error or critical failure (e.g. allocation failing or approaching a limit). Normal processing of errors from user code (e.g. transaction aborted, timeouts, authentication failed) can also generate a warning.</p></td></tr><tr><td><p>Warning</p></td><td><p>A condition exists that can subsequently result in an error or critical failure (e.g. allocation failing or approaching a limit). Normal processing of errors from user code (e.g. transaction aborted, timeouts, authentication failed) can also generate a warning.</p></td></tr><tr><td><p>Information</p></td><td><p>Messages helpful for monitoring and diagnosing the system status, measuring performance or profiling are generated. They can include transaction and enlistment lifetime events, such as a transaction being created or committed, the crossing of a significant boundary or the allocation of significant resources. A developer can then utilize such information for capacity planning and performance management.</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="TracingSwitches"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Tracing switches</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Trace switches allow you to enable, disable, and filter tracing output. They are objects that exist in software and can be configured externally through the ‘CASOpcDaWrapper.exe.config’ file. Trace switches can be useful for filtering information. For example, you want to see every tracing message in a data access module, but only error messages in the rest of the application. In that case, use one trace switch for the data access module and one switch for the rest of the application. Using the ‘CASOpcDaWrapper.exe.config’ file to configure the switches to the appropriate settings, you will be able to control what types of trace messages you receive. Levels allow you to limit the amount of tracing information you receive to information needed to solve a problem only. To specify the level of detail you want in your tracing output set and configure trace switches to the appropriate trace level. You can receive the following messages:</p><div class="tableSection"><table><tr><th><p>Enumerated value</p></th><th><p>Integer value </p></th><th><p>Type of message displayed (or written to a specified output target)</p></th></tr><tr><td><p>Off</p></td><td><p>0</p></td><td><p>None</p></td></tr><tr><td><p>Error</p></td><td><p>1</p></td><td><p>Only error messages</p></td></tr><tr><td><p>Warning</p></td><td><p>2</p></td><td><p>Warning messages and error messages</p></td></tr><tr><td><p>Info</p></td><td><p>3</p></td><td><p>Informational messages, warning messages and error messages</p></td></tr><tr><td><p>Verbose</p></td><td><p>4</p></td><td><p>Verbose messages, informational messages, warning messages and error messages</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="TracingSources"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Tracing sources</span></div><div id="ID3RBSection" class="collapsibleSection"><p>Trace sources are a feature that provides an enhanced tracing system. The basic premise is unchanged: tracing messages are sent through switches to listeners, which report the data to an associated output medium.</p></div><div class="collapsibleAreaRegion" id="TracingListeners"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Tracing listeners</span></div><div id="ID4RBSection" class="collapsibleSection"><p>Trace messages are received by listeners. The purpose of a listener is to collect, store, and route tracing messages. Listeners direct the tracing output to an appropriate target, such as a log, window, or text file. One such listener, the DefaultTraceListener, is automatically created and initialized when tracing is enabled. If you want trace output to be directed to any additional sources, you must create and initialize additional trace listeners. The listeners you create should reflect your individual needs. For example, you want a text record of all trace output. In this case, create a listener that writes all output to a new text file when enabled. There are several types of predefined listeners: </p><ul><li><p>TextWriterTraceListener outputs information as a text to the console or to a file</p></li><li><p>EventLogTraceListener redirects output to an event log.</p></li><li><p>ConsoleTraceListener directs tracing or debugging output to either the standard output or the standard error stream.</p></li><li><p>DelimitedListTraceListener directs tracing or debugging output to a text writer, such as a file stream. The trace output is in a delimited text format that uses the delimiter specified by the Delimiter property.  (this is a useful option to have an output in CSV format)</p></li><li><p>XmlWriterTraceListener directs tracing or debugging output as XML-encoded data to a  file stream. (this is a useful option to have an output in XML format)</p></li></ul></div><div class="collapsibleAreaRegion" id="TracingFilters"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Tracing filters</span></div><div id="ID5RBSection" class="collapsibleSection"><p>A trace filter can be added to a trace listener to provide a layer of screening in addition to that provided to the trace source by switches. For example, EventTypeFilter can be added to a trace listener to control the event types that are output by the listener. Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</p><p>One of several different types of filters can be assigned to a trace listener through the Filter property to provide a layer of screening in addition to that provided by the TraceSwitch. The filter can be used to control the event types that are produced by the listener.</p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="4f52c757-1266-4b00-85be-a77134cb4e98.htm">Appendix A (example of a report)</a></div></div></div></div><div id="pageFooter" class="pageFooter">This documentation is designed to be used with CAS CommServer (this software is available at <A href="http://www.commsvr.com/index.php/products" title="CommServer -multiprotocol, multichannel, redundant communication server – software installation.">http://www.commsvr.com</A>).<p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2019 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=CommServer">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>