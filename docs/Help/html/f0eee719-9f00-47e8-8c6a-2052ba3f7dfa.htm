<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Advanced DataBase operation block</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Advanced DataBase Operation" /><meta name="System.Keywords" content="SQL Conectivity, Advanced DataBase " /><meta name="System.Keywords" content="SQL Conectivity, Advanced Operation" /><meta name="Microsoft.Help.Id" content="f0eee719-9f00-47e8-8c6a-2052ba3f7dfa" /><meta name="Description" content="Capabilities of DataPorter database related operations (“DB” blocks) go beyond simple reading and writing from/to database." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">CommServer<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/2dea0752-d490-47e6-8444-ac73e07601fc.htm" title="CommServer" tocid="roottoc">CommServer</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b8c5f048-bb7e-4742-b7f2-b61a77789ed9.htm" title="DataPorter" tocid="b8c5f048-bb7e-4742-b7f2-b61a77789ed9">DataPorter</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a5b37bb1-ca47-4770-900e-85b8da61cfe6.htm" title="Configuration" tocid="a5b37bb1-ca47-4770-900e-85b8da61cfe6">Configuration</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/26dd91e2-db6e-4a3a-ac32-a7f14422e466.htm" title="SQL Conectivity" tocid="26dd91e2-db6e-4a3a-ac32-a7f14422e466">SQL Conectivity</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9f3954b0-cc3e-46d1-a3e6-59649db7e738.htm" title="Example simple database configuration" tocid="9f3954b0-cc3e-46d1-a3e6-59649db7e738">Example simple database configuration</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/42ac5182-238c-41a2-81a7-f66a77089b02.htm" title="Storing From Opc Into Sql " tocid="42ac5182-238c-41a2-81a7-f66a77089b02">Storing From Opc Into Sql </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/169261d2-f2b0-43f0-908a-bf6d23099aa1.htm" title="Reading from SQL and copying to OPC" tocid="169261d2-f2b0-43f0-908a-bf6d23099aa1">Reading from SQL and copying to OPC</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/f0eee719-9f00-47e8-8c6a-2052ba3f7dfa.htm" title="Advanced DataBase operation block" tocid="f0eee719-9f00-47e8-8c6a-2052ba3f7dfa">Advanced DataBase operation block</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Advanced DataBase operation block</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com/tabid/55/language/en-US/Default.aspx" title="CommServer online help" target="_blank">Home</A></span> <div class="introduction"><p>
        Capabilities of DataPorter database related operations (“DB” blocks) go beyond simple reading and writing from/to database.
      </p><div class="mediaCenter"><img alt="AdvancedDBOperation.jpg" src="../media/AdvancedDBOperation.jpg" /><div class="caption"><span class="captionLead">Figure 1:
						</span>Advanced DB operation</div></div></div><div id="ID1RBSection" class="collapsibleSection"><p>
          A good example is “Advance DataBase Operation” (“DB+” block). It contains outputs and inputs, so items (form OPC or any other generator) can be connected to inputs and outputs. This offers such possibilities as:
        </p><ul><li><p>
              Reading and writing from/to database at the same time (in the same operation)
            </p></li><li><p>
              Performing some calculations
            </p></li><li><p>
              Processing advanced condition
            </p></li></ul><p>
          By default, the “DB+” block is preconfigured to perform example calculations. Lets analyze an example. The goal of this example is to show how to use the built-in language to manipulate the values of inputs and outputs. The figure below presents an example transaction:
        </p><div class="mediaCenter"><img alt="Transaction_AdbancedDB_oper.jpg" src="../media/Transaction_AdbancedDB_oper.jpg" /></div><p>
          It this example, the “DB+” operation block may contain an XML configuration similar to the following:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-comment">&lt;!-- such text is comment --&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"assign"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of input 0 is inserted to the acumulator--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"add"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of input 1 is added to the acumulator--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"write"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">output</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">output</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of acumulator is written to output 0 (= Input 0 + Input 1)--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"assign"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of input 0 is inserted to the acumulator--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"sub"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of input 1 is substracted from the acumulator--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"write"</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">output</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">output</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-comment">&lt;!--value of acumulator is written to output 1 (=Input 0 - Input 1)--&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>
          The result of this example is shown below:

        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">scr</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">output(0) = input (0) + input (1)
output(1) = input (0) - input (1)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>
          So, after execution of this transaction:
        </p><ul><li><p>
              PLC/R/100 contains the value of  PLC/G/000 + PLC/G/001
            </p></li><li><p>
              PLC/R/101 contains the value of  PLC/G/000 - PLC/G/001
            </p></li></ul></div><div class="collapsibleAreaRegion" id="DataBaseOperationDrivenByDataFromOPCServer"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />DataBase operation driven by data from OPC Server</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Database operations in DataPorter support also a scenario when communication with database can be enabled or disabled by other conditions, for example a value of an item read from OPC Server. </p><p>The following configuration shows such situation. It is based on a default CommServer configuration.</p><div class="mediaCenter"><img alt="Example Configuration" src="../media/ExampleConfiguration.jpg" /><div class="caption"><span class="captionLead">Figure 3:
						</span>Example configuration</div></div><p>In this example the DataPorter reads a value of the OPC tag PLC/R/100. This value  is inserted to the DB READ block in which we check if PLC/R/100 equals 1. If it is true the DataPorter inserts values taken from the database (using query: SELECT top 1 [opcvalue] FROM [OPCDataTable] order by [timestamp] desc) to the following variables:</p><ul class="noBullet"><li><p>PLC/R/101</p></li><li><p>PLC/R/102</p></li><li><p>PLC/R/102</p></li></ul><p>
          The DB READ operation configuration is shown below (the text between “&lt;!--" and “--&gt;” is a comment):
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAHABAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAHABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAHABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAHABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;?</span><span class="highlight-xml-tag">xml</span> <span class="highlight-xml-attribute-name">version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1.0"</span> <span class="highlight-xml-attribute-name">encoding</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"utf-8"</span> <span class="highlight-xml-bracket">?&gt;</span>
<span class="highlight-xml-comment">&lt;!-- such text is comment --&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"assign"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!--value of input 0 is inserted to the acumulator--&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationif</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"if"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"and"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">reset</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"none"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">reset</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">equal</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">equal</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">stop</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">stop</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationif</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!-- operation DB definition, it contains information about the database provider and the connection string 
(one of the definition is commented to show the difference between attaching the SQLserver hosted database or the file.
object "operationdb" indicates the it is operation on the database, (it is possible to have many "operationdb" 
definitions inside one "Param"). name attribute indicate the right data base provider (ORACLE, OLEDB, ODBC, MSSQL); 
in this example it is oracle. The next parameter is connection string, this string contains all necessary information 
that are required to connect to the database; the syntax depends on the database provider (more details at:http://msdn.microsoft.com). 
In this walkthrough user id: has value: scott, data source=orcl (the name of the serviced configured above), 
password: tiger (because password is inside quotations we have to use &amp;quot;).
--&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;Initial Catalog=DataPorterDataBase;Integrated Security=True"</span>
<span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteScalar"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!-- command: in the command object there is definition of query parts; here we have: SELECT top 1 [opcvalue] FROM [OPCDataTable] 
order by [timestamp] desc , which is the the query. 
Structure of the DataBase: 
CREATE TABLE OPCDataTable
(
[timestamp] [datetime] NOT NULL,
[name] [nchar](255) NOT NULL,
[opcvalue] [float] NULL,
[opcquality] [nchar](20) NULL
)
--&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">""</span><span class="highlight-xml-bracket">&gt;</span>SELECT top 1 [opcvalue] FROM [OPCDataTable] order by [timestamp] desc<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"write"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">output</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">output</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!--value of acumulator is written to output 0 --&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;Initial Catalog=DataPorterDataBase;Integrated Security=True"</span> 
<span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteScalar"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">""</span><span class="highlight-xml-bracket">&gt;</span>SELECT top 1 [opcvalue] FROM [OPCDataTable] order by [timestamp] desc<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"write"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">output</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">output</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!--value of acumulator is written to output 0 --&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationdb</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MSSQL"</span> <span class="highlight-xml-attribute-name">connectionstring</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Data Source=.\SQLEXPRESS;Initial Catalog=DataPorterDataBase;Integrated Security=True"</span> 
<span class="highlight-xml-attribute-name">stop</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"ExecuteScalar"</span> <span class="highlight-xml-attribute-name">async</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">command</span> <span class="highlight-xml-attribute-name">separator</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">""</span><span class="highlight-xml-bracket">&gt;</span>SELECT top 1 [opcvalue] FROM [OPCDataTable] order by [timestamp] desc<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">command</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationdb</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"write"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">output</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"2"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">output</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!--value of accumulator is written to output 0 --&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Param</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAHABAAA");</script><p>To understand what is happening, take a look at the following code:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFABAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationopc</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"opc"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"assign"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">input</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"0:value"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">input</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-comment">&lt;!--value of input 0 is inserted to the accumulator--&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationopc</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABAAA");</script><p>The code above instructs the DataPorter to take a value from input 0 to the accumulator. Then a value comparison occurs:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADABAAA_tab1" class="codeSnippetContainerTabSingle">XML</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">operationif</span> <span class="highlight-xml-attribute-name">name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"if"</span> <span class="highlight-xml-attribute-name">type</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"and"</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">reset</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"none"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">reset</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">equal</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"1"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">equal</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">stop</span> <span class="highlight-xml-attribute-name">value</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"false"</span><span class="highlight-xml-bracket">&gt;</span><span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">stop</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">operationif</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABAAA");</script><p>In the code above the comparison of the value from the accumulator is made. The "and" is a connective between elements, so:</p><ul><li><p>reset - deletes all earlier comparison results (it should be set at the beginning of every comparison)</p></li><li><p>equal value="1" - checks if the value in the accumulator equals 1</p></li><li><p>stop value="false" - if the value is false (value in the accumulator is different then 1) we set a request that the transaction is stopped </p></li></ul><p>Then, every operation (OperationDB) automatically checks if the Stop request is set and if not - the operation is executed.</p></div></div></div><div id="pageFooter" class="pageFooter">This documentation is designed to be used with CAS CommServer (this software is available at <A href="http://www.commsvr.com/index.php/products" title="CommServer -multiprotocol, multichannel, redundant communication server – software installation.">http://www.commsvr.com</A>).<p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2019 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=CommServer">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>