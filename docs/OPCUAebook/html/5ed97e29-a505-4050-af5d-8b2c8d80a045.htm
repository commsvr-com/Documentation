<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Variable Node Class</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="5ed97e29-a505-4050-af5d-8b2c8d80a045" /><meta name="Description" content="Variables are defined using the Variable node class. Two types of variables are defined: properties and data variables. Although they differ in the way they are used as described in and have different constraints." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">OPC Unified Architecture<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="OPC Unified Architecture" tocid="roottoc">OPC Unified Architecture</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="Welcome to the OPC Unified Architecture e-book" tocid="e34055b2-23e0-4f1a-9e00-52d75becaeec">Welcome to the OPC Unified Architecture e-book</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm" title="Address Space" tocid="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e">Address Space</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1350bd8c-b694-4aab-b5fd-8aa8b8bc1f67.htm" title="Standard Node Classes" tocid="1350bd8c-b694-4aab-b5fd-8aa8b8bc1f67">Standard Node Classes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/467e8ac2-46d8-4758-8965-a891200787ee.htm" title="Base" tocid="467e8ac2-46d8-4758-8965-a891200787ee">Base</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0a8a12b4-ea75-44d2-ab18-c2a49b8b4606.htm" title="View" tocid="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606">View</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d38394a1-c1c0-4c91-8a38-4fa47ad2bf35.htm" title="Object" tocid="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35">Object</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/5ed97e29-a505-4050-af5d-8b2c8d80a045.htm" title="Variable" tocid="5ed97e29-a505-4050-af5d-8b2c8d80a045">Variable</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/92f04f9b-1fd7-4668-8deb-626991b93201.htm" title="Method" tocid="92f04f9b-1fd7-4668-8deb-626991b93201">Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9d541e15-812b-4dce-9b4c-7b0d66e74daf.htm" title="ObjectType" tocid="9d541e15-812b-4dce-9b4c-7b0d66e74daf">ObjectType</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/07e07cd6-0589-48e7-89c3-e99176e1cb23.htm" title="DataType" tocid="07e07cd6-0589-48e7-89c3-e99176e1cb23">DataType</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4044403d-3a21-40cc-a508-b2d17a10b62d.htm" title="ReferenceType" tocid="4044403d-3a21-40cc-a508-b2d17a10b62d">ReferenceType</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm" title="VariableType" tocid="1bc63c28-33da-4c76-b8f6-8df43f0a776f">VariableType</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1f82af61-a0d9-4730-8cf1-d93ab765f2d2.htm" title="Summary of Attributes" tocid="1f82af61-a0d9-4730-8cf1-d93ab765f2d2">Summary of Attributes</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Variable Node Class</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com" title="OPC Unified Architecture" target="_blank">Home</A></span> <div class="summary"><p>
      Variables are defined using the Variable node class. Two types of variables are defined: properties and data variables. Although they differ in the way they are used as described in <a href="57948ea6-b48e-43c9-addc-d24694886784.htm">Variable</a> and have different constraints.
    </p></div><div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Property">Property</a></li><li class="outlineSectionEntry"><a href="#DataVariable">DataVariable</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul><p>Variables are used to represent values which may be simple or complex.</p><p>
      Variables are always defined as properties or data variables of other nodes in the Address Space. They are never defined by themselves.
    </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
        The Variable node is always part of at least one other node, but may be related to any number of other nodes.
      </p></td></tr></table></div><p>
      Variables are defined using the Variable node class.
    </p><p>
      The Variable node class inherits the base attributes from the <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm">Base</a>node class.
    </p><p>
      The Variable node class also defines a set of attributes that describe the variable’s runtime value. The <span class="code">Value</span> attribute represents the variable value. The <span class="code">DataType</span>, <span class="code">ValueRank</span> and <span class="code">ArrayDimensions</span>  attributes provide the capability to describe simple and complex values.
    </p><p>
      The <span class="code">AccessLevel</span> attribute indicates the accessibility of the value of a variable not taking user access rights into account. If the OPC Unified Architecture server does not have the ability to get the <span class="code">AccessLevel</span> information from the underlying system, it should state that it is read and writable. If a read or write operation is called on the Variable, the server should transfer this request and return the corresponding StatusCode if such a request is rejected. Status codes are described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>.
    </p><p>
      The SemanticChange bit of the <span class="code">AccessLevel</span> attribute shall be set when the property describes the semantic of the node that owns the property and changes of the property value will generate <a href="2191d1e7-9793-4eee-a180-a59b249f1098.htm#SemanticChangeEventType">semantic change events</a></p><p>
      For example, a property describing the engineering unit of a <a href="#DataVariable">DataVariable</a> has the bit set, whereas a property containing an icon of the DataVariable will not. This behaviour is exactly the same as described by the SemanticsChanged bit of the StatusCode described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>. However, if you subscribe to a Variable you should look at the StatusCode to identify if the semantic has changed in order to receive this information before you are processing the value of the Variable.
    </p><p>
      The <span class="code">UserAccessLevel</span> attribute indicates the accessibility of the Value of a variable taking user access rights into account. If the OPC Unified Architecture server does not have the ability to get any user access rights related information from the underlying system, it should use the same bit mask as used in the <span class="code">AccessLevel</span> attribute. The <span class="code">UserAccessLevel</span> attribute can restrict the accessibility indicated by the <span class="code">AccessLevel</span> attribute, but not exceed it.
    </p><p>
      The <span class="code">MinimumSamplingInterval</span> attribute specifies how fast the server can reasonably sample the value for changes. The accuracy of this value (the ability of the server to attain “best case” performance) can be greatly affected by system load and other factors.
    </p><p>
      The <span class="code">Historizing</span> attribute indicates whether the Server is actively collecting data for the history of the Variable. See section <a href="48e0fc4c-b072-4e4e-b4e9-b917fab44762.htm">Historical Access</a> for details on historizing Variables.
    </p><p>
      Clients may read or write Variable values, or monitor them for value changes, as described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>.
      Section <a href="f268d513-5215-4ded-bd94-ddaadf24d789.htm">Data Access</a> describes additional rules when using the services for automation data.
    </p><p>
      To specify its modelling rule, a variable can use at most one HasModellingRule reference pointing to a ModellingRule node.
    </p><p>
      A variable shall use at most one <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasModelParent">HasModelParent</a> reference to specify its <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasModelParent">model parent</a>.
    </p><p>
      If the variable is created based on an instance declaration (see <a href="69856d11-e274-48c1-87d7-bbc7ec5e6e18.htm">Type Definition</a> ) it shall have the same <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a> as its instance declaration.
    </p><p>
      The other references are described separately for properties and data variables in the following subclauses.
    </p></div><div class="collapsibleAreaRegion" id="Property"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Property</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
        Properties are used to define the characteristics of nodes. Properties are defined using the Variable node class.
      </p><p>
        Properties are the leaf of any hierarchy; therefore they shall not be the source node of any hierarchical references. This includes the <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasComponent">HasComponent</a> or <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> reference, that is, properties do not contain properties and cannot expose their complex structure. However, they may be the source node of any non-hierarchical references.
      </p><p>
        The <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasTypeDefinition">HasTypeDefinition</a> reference points to the <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a> of the Property. Since Properties are uniquely identified by their <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a> attribute, all properties shall point to the <a href="d43f206c-8b58-4ded-b9c8-74eaac63cb36.htm#PropertyType">PropertyType</a> described in section <a href="d43f206c-8b58-4ded-b9c8-74eaac63cb36.htm">Standard Variable Types</a>.
      </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
          Properties shall always be defined in the context of another node and shall be the target node of at least one <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> reference.
        </p></td></tr></table></div><p>
        To distinguish them from data variables, they shall not be the target node of any <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasComponent">HasComponent</a> reference. Thus, a <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> reference pointing to a variable node defines this node as a property.
      </p><p>
        The <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a> of a Property is always unique in the context of a Node. It is not permitted for a Node to refer to two Variables using <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> References having the same <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a>.
      </p></div><div class="collapsibleAreaRegion" id="DataVariable"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />DataVariable</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
        The DataVariable node represent the content of an object. Data variables are defined using the Variable node class.
      </p><p>
        Data variables identify their properties using <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> references. Complex data variables use <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasComponent">HasComponent</a> references to expose their component data variables.
      </p><p>
        The property NodeVersion indicates the version of the DataVariable node. The property TimeZone indicates the difference between the SourceTimestamp of the value and the standard time at the location in which the value was obtained. The property DaylightSavingTime indicates if a daylight saving time offset shall be added to the TimeZone value in order to get a result with respect to daylight saving time. The property DataTypeVersion is used only for data type dictionaries and data type descriptions as defined in <a href="07e07cd6-0589-48e7-89c3-e99176e1cb23.htm">DataType</a> . The standard property DictionaryFragment is used only for data type descriptions as defined in <a href="07e07cd6-0589-48e7-89c3-e99176e1cb23.htm">DataType</a>. The property AllowNulls indicates if NULL values are allowed for the Value attribute.
        Section <a href="f268d513-5215-4ded-bd94-ddaadf24d789.htm">Data Access</a> describes a set of properties that can be used for data variables.
      </p><p>
        Data variables may use additional references to define relationships to other nodes. No restrictions are placed on the types of references used or on the node classes of the nodes that may be referenced. However, restrictions may be defined by the ReferenceType excluding its use for data variables. Standard reference types are described in <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm">Standard Reference Types</a>.
      </p><p>
        A DataVariable nodes are intended to be defined in the context of an object. However, complex data variables may expose other data variables, and object types and complex variable types may also contain data variables. Therefore each DataVariable shall be the target node of at least one <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasComponent">HasComponent</a> reference coming from an Object, an <a href="9d541e15-812b-4dce-9b4c-7b0d66e74daf.htm">ObjectType</a>, a DataVariable or a <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a>. Data variables shall not be the target node of any <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasProperty">HasProperty</a> references. Therefore, a <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasComponent">HasComponent</a> reference pointing to a Variable node identifies it as a DataVariable.
      </p><p>
        The <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm#HasTypeDefinition">HasTypeDefinition</a> reference points to the <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a> used as type definition of the DataVariable.
      </p><p>
        If the DataVariable is used as instance declaration (see <a href="69856d11-e274-48c1-87d7-bbc7ec5e6e18.htm">Type Definition</a> ) all nodes referenced with hierarchical references in forward direction shall have unique browse names in the context of this DataVariable.
      </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="d43f206c-8b58-4ded-b9c8-74eaac63cb36.htm">Standard Variable Types</a></div><div class="seeAlsoStyle"><a href="07e07cd6-0589-48e7-89c3-e99176e1cb23.htm">DataType</a></div><div class="seeAlsoStyle"><a href="f268d513-5215-4ded-bd94-ddaadf24d789.htm">Data Access</a></div><div class="seeAlsoStyle"><a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm">Standard Reference Types</a></div><div class="seeAlsoStyle"><a href="69856d11-e274-48c1-87d7-bbc7ec5e6e18.htm">Type Definition</a></div><div class="seeAlsoStyle"><a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2020 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=OPC%20Unified%20Architecture">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>