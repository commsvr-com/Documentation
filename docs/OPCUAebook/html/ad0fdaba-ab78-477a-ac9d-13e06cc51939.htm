<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>How to Use the Address Space Model</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="ad0fdaba-ab78-477a-ac9d-13e06cc51939" /><meta name="Description" content="This topic points out some general considerations how the Address Space model can be used. Each server vendor can model its data in the appropriated way that fits to its needs, however, this topic gives some hints the server vendor may consider." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems.<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems." tocid="roottoc">OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems.</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="Welcome to the OPC Unified Architecture e-book" tocid="e34055b2-23e0-4f1a-9e00-52d75becaeec">Welcome to the OPC Unified Architecture e-book</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm" title="Address Space" tocid="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e">Address Space</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ad8b0a3f-9293-4a1e-8f03-3e463a8d5f04.htm" title="Concepts" tocid="ad8b0a3f-9293-4a1e-8f03-3e463a8d5f04">Concepts</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1350bd8c-b694-4aab-b5fd-8aa8b8bc1f67.htm" title="Standard Node Classes" tocid="1350bd8c-b694-4aab-b5fd-8aa8b8bc1f67">Standard Node Classes</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/dba17623-98d7-4a47-9e57-f352a2c3e2fe.htm" title="Type Model for ObjectTypes and VariableTypes" tocid="dba17623-98d7-4a47-9e57-f352a2c3e2fe">Type Model for ObjectTypes and VariableTypes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/57be83ea-0aac-4456-b29a-0b18a8467134.htm" title="Standard Reference Types" tocid="57be83ea-0aac-4456-b29a-0b18a8467134">Standard Reference Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/546f49d5-8153-434c-9e74-d7835d7862bc.htm" title="Standard Data Types" tocid="546f49d5-8153-434c-9e74-d7835d7862bc">Standard Data Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2191d1e7-9793-4eee-a180-a59b249f1098.htm" title="Standard Event Types" tocid="2191d1e7-9793-4eee-a180-a59b249f1098">Standard Event Types</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/ad0fdaba-ab78-477a-ac9d-13e06cc51939.htm" title="How to Use the Address Space Model" tocid="ad0fdaba-ab78-477a-ac9d-13e06cc51939">How to Use the Address Space Model</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7cd6ebfb-3582-4ae7-8b1c-89e038d9bb66.htm" title="OPC UA Meta Model in UML" tocid="7cd6ebfb-3582-4ae7-8b1c-89e038d9bb66">OPC UA Meta Model in UML</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4ff5fa83-9b3b-4c4f-8160-f5261ba30633.htm" title="Graphical Notation" tocid="4ff5fa83-9b3b-4c4f-8160-f5261ba30633">Graphical Notation</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>How to Use the Address Space Model</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com" title="OPC Unified Architecture" target="_blank">Home</A></span> <div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#TypeDefinitions">Type Definitions</a></li><li class="outlineSectionEntry"><a href="#ObjectTypes">Object Types</a></li><li class="outlineSectionEntry"><a href="#VariableTypes">Variable Types</a></li><li class="outlineSectionEntry"><a href="#Views">Views</a></li><li class="outlineSectionEntry"><a href="#Methods">Methods</a></li><li class="outlineSectionEntry"><a href="#DefiningReferenceTypes">Defining Reference Types</a></li><li class="outlineSectionEntry"><a href="#DefiningModellingRules">Defining Modelling Rules</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul><p>
      This topic points out some general considerations how the Address Space model can be used. Each server vendor can model its data in the appropriated way that fits to its needs, however, this topic gives some hints the server vendor may consider.
    </p><p>
      Typically OPC Unified Architecture servers will offer data provided by an underlying system like a device, a configuration database, an OPC COM server, etc. Therefore the modelling of the data depends on the model of the underlying system as well as the requirements on the clients accessing the OPC Unified Architecture server. It is also expected that companion specifications will be developed on top of OPC Unified Architecture with additional rules how to model the data. However, the following subclauses will give some general consideration about the different concepts of OPC Unified Architecture to model data and when they should be used and when not.
    </p><p>
      The subsection <a href="9c0bb318-1a77-4f74-aabc-1c3eb7cfdfc9.htm">Design decisions when modelling the server information</a> gives an overview over the design decisions made when modelling the information about the server described in section <a href="3f999f23-4ad7-46a4-80dd-ab33729d5f49.htm">Information Model</a>.
    </p></div><div class="collapsibleAreaRegion" id="TypeDefinitions"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Type Definitions</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
        Type definitions should be used whenever it is expected that the type information may be used more than once in the same system or for interoperability between different systems supporting the same type definitions.
      </p></div><div class="collapsibleAreaRegion" id="ObjectTypes"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Object Types</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
        Section <a href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35.htm">Object</a> states: “Objects are used to represent systems, system components, real-world objects, and software objects.” Therefore <a href="0d741b40-7d47-4aa1-852b-fe9007394b7f.htm">object types</a> should be used if a type definition of those is useful.
      </p><p>
        From a more abstract point of view <a href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35.htm">objects</a> are used to group <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">variables</a> and other <a href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35.htm">objects</a> in the Address Space. Therefore object types should be used when some common structures / groups of objects and / or variables should be described. Clients can use this knowledge to program against the <a href="9d541e15-812b-4dce-9b4c-7b0d66e74daf.htm">ObjectType</a> structure and use the TranslateBrowsePathsToNodeIds service (described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>) on the instances.
      </p><p>
        Simple objects only having one value (e.g. a simple heat sensor) can also be modelled as <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">variable types</a>. However, extensibility mechanisms should be considered (e.g. a complex heat sensor subtype could have several values) and whether the object should be exposed as an object in the client's GUI or just as a value. Whenever a modeller is in doubt which solution to use the <a href="9d541e15-812b-4dce-9b4c-7b0d66e74daf.htm">ObjectType</a> having one <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> should be preferred.
      </p></div><div class="collapsibleAreaRegion" id="VariableTypes"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Variable Types</span></div><div id="ID2RBSection" class="collapsibleSection"><p>This section contains the following subsections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#PropertiesorDataVariables">Properties or Data Variables</a></li><li class="outlineSectionEntry"><a href="#Many_Variables_and_or_Complex_Data_Types">Many Variables and / or Complex Data Types</a></li></ul><p><a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">Variable types</a> are only used for <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#DataVariable">data variables</a> and should be used when there are several variables having the same semantic (e.g. set point). It is not needed to define a <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a> just reflecting the <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data type</a> of the <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a>, e.g. an “Int32VaraibleType”.
      </p><h4 class="subHeading" id="PropertiesorDataVariables">Properties or Data Variables</h4><div class="subsection"><p>
            Besides the semantic differences of <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#Property">properties</a> and <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#DataVariable">data variables</a> there are also syntactic differences. A property is identified by its <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a>, i.e. if properties having the same semantic are used several times, they should always have the same <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a>. The same semantic of <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#DataVariable">data variables</a> is captured in the <a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a>.
          </p><p>
            If it’s not clear what concept to use based on the semantic described in <a href="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm">Address Space</a>, the different syntax can help. The following points identify that it has to be a <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#DataVariable">data variable</a>:
          </p><ul><li><p>
                If it’s a complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> or it should contain additional information in the form of properties.
              </p></li><li><p>
                If the type definition may be refined (subtyping).
              </p></li><li><p>
                If the type definition should be made available so the client can use the AddNodes service (described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>) to create new instances of the type definition.
              </p></li><li><p>
                If it’s a component of a complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> exposing a part of the value of the complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a>.
              </p></li></ul></div><h4 class="subHeading" id="Many_Variables_and_or_Complex_Data_Types">Many Variables and / or Complex Data Types</h4><div class="subsection"><p>
            When complex data structures should be made available to the client there are basically three different approaches:
          </p><ol><li><p>
                Create several simple <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">variables</a> using simple <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data types</a> always reflecting parts of the simple structure. Objects are used to group the variables according to the structure of the data.
              </p></li><li><p>
                Create a complex <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data types</a> and a simple <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> using this type.
              </p></li><li><p>
                Create a complex <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data type</a> and a complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> using this type and also exposing the complex data structure as variables of the complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> using simple <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data types</a></p></li></ol><p>
            The advantages of the first approach are that the complex structure of the data is visible in the Address Space; a generic client can easily access those data without knowledge of user-defined data types; and the client can access individual parts of the complex data. The disadvantages of the first approach are that accessing the individual data does not provide any transactional context; and for a specific client the server first has to convert the data and the client has to convert the data, again, to get the data structure the underlying system provides.
          </p><p>
            The advantages of the second approach are, that the data are accessed in a transaction context and the complex <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data type</a> can be constructed in a way that the server does not have to convert the data and can pass them directly to the specific client that can directly use them. The disadvantages are that the generic client might not be able to access and interpret the data or has at least the burden to read the <a href="d43f206c-8b58-4ded-b9c8-74eaac63cb36.htm#DataTypeDescriptionType">data type description</a> to interpret the data. The structure of the data is not visible in the Address Space; additional properties describing the data structure cannot be added to the adequate places since they do not exist in the Address Space. Individual parts of the data cannot be read without accessing the whole data structure.
          </p><p>
            The third approach combines both other approaches. Therefore the specific client can access the data in its native format in a transactional context, whereas the generic client can access the simple <a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">data types</a> of the components of the complex <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a>. The disadvantage is that the server shall be able to provide the native format and also interpret it to be able to provide the information in simple data types.
          </p><p>
            It is recommended to use the first approach. When a transactional context is needed or the client should be able to get a large amount of data instead of subscribing to several individual values, the third approach is suitable. However, the server might not always have the knowledge to interpret the complex data of the underlying system and therefore has to use the second approach just passing the data to the specific client who is able to interpret the data.
          </p></div></div><div class="collapsibleAreaRegion" id="Views"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Views</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
        Server-defined <a href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606.htm">View</a> nodes can be used to present an excerpt of the Address Space suitable for a special class of clients, e.g. maintenance clients, engineering clients, etc. The <a href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606.htm">View</a> only provides the information needed for the purpose of the client and hides unnecessary information.
      </p></div><div class="collapsibleAreaRegion" id="Methods"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
        Methods should be used whenever some input is expected and the server delivers a result. One should avoid using <a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a> nodes to write the input values and other variables to get the output results as it was needed to do in OPC COM since there was no concept of a <a href="92f04f9b-1fd7-4668-8deb-626991b93201.htm">Method</a> available. However, a simple OPC COM wrapper might not be able to do this.
      </p><p>
        Methods can also be used to trigger some execution in the server that does not require input and / or output parameters.
      </p><p>
        Global methods, i.e. methods that cannot directly be assigned to a special object, should be assigned to the <a href="6f98c5eb-4449-4a75-aa31-39296b4c5d97.htm#ServerType">Server object</a>.
      </p></div><div class="collapsibleAreaRegion" id="DefiningReferenceTypes"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Defining Reference Types</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
        Defining new <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm">reference types</a> should only be done if the predefined types are not suitable. Whenever a new reference type is defined, the most appropriate reference type should be used as its supertype.
      </p><p>
        It is expected that servers will have new defined hierarchical <a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm">reference types</a> to expose different hierarchies and new non-hierarchical references to expose relationships between nodes in the Address Space.
      </p></div><div class="collapsibleAreaRegion" id="DefiningModellingRules"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Defining Modelling Rules</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
        New <a href="b6fbace7-8f12-4c47-8dd2-d9223336254b.htm#ModellingRuleType">modelling rules</a> have to be defined if the predefined once are not appropriated for the model exposed by the server.
      </p><p>
        Depending on the model used by the underlying system the server may need to define new modelling rules, since the OPC Unified Architecture server may only pass the data to the underlying system and this system may use its own internal rules for instantiation, subtyping, etc.
      </p><p>
        Beside this the predefined <a href="b6fbace7-8f12-4c47-8dd2-d9223336254b.htm#ModellingRuleType">modelling rules</a> might not be sufficient to specify the needed behaviour for instantiation and subtyping.
      </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="9c0bb318-1a77-4f74-aabc-1c3eb7cfdfc9.htm">Design decisions when modelling the server information</a></div><div class="seeAlsoStyle"><a href="3f999f23-4ad7-46a4-80dd-ab33729d5f49.htm">Information Model</a></div><div class="seeAlsoStyle"><a href="d38394a1-c1c0-4c91-8a38-4fa47ad2bf35.htm">Object</a></div><div class="seeAlsoStyle"><a href="0d741b40-7d47-4aa1-852b-fe9007394b7f.htm">Object types</a></div><div class="seeAlsoStyle"><a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm">Variable</a></div><div class="seeAlsoStyle"><a href="9d541e15-812b-4dce-9b4c-7b0d66e74daf.htm">ObjectType</a></div><div class="seeAlsoStyle"><a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a></div><div class="seeAlsoStyle"><a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">Variable types</a></div><div class="seeAlsoStyle"><a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#DataVariable">Data variables</a></div><div class="seeAlsoStyle"><a href="1bc63c28-33da-4c76-b8f6-8df43f0a776f.htm">VariableType</a></div><div class="seeAlsoStyle"><a href="5ed97e29-a505-4050-af5d-8b2c8d80a045.htm#Property">Properties</a></div><div class="seeAlsoStyle"><a href="467e8ac2-46d8-4758-8965-a891200787ee.htm#BrowseName">BrowseName</a></div><div class="seeAlsoStyle"><a href="546f49d5-8153-434c-9e74-d7835d7862bc.htm">Data type</a></div><div class="seeAlsoStyle"><a href="d43f206c-8b58-4ded-b9c8-74eaac63cb36.htm#DataTypeDescriptionType">DataTypeDescriptionType</a></div><div class="seeAlsoStyle"><a href="0a8a12b4-ea75-44d2-ab18-c2a49b8b4606.htm">View</a></div><div class="seeAlsoStyle"><a href="92f04f9b-1fd7-4668-8deb-626991b93201.htm">Method</a></div><div class="seeAlsoStyle"><a href="6f98c5eb-4449-4a75-aa31-39296b4c5d97.htm#ServerType">ServerType</a></div><div class="seeAlsoStyle"><a href="57be83ea-0aac-4456-b29a-0b18a8467134.htm">Standard Reference Types</a></div><div class="seeAlsoStyle"><a href="b6fbace7-8f12-4c47-8dd2-d9223336254b.htm#ModellingRuleType">ModellingRuleType</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2020 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=OPC%20Unified%20Architecture%20-%20specification%20applicable%20to%20manufacturing%20software%20in%20application%20areas%20such%20as%20Field%20Devices,%20Control%20Systems,%20Manufacturing%20Execution%20Systems%20and%20Enterprise%20Resource%20Planning%20Systems.">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>