<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Unified Architecture Overview</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="d458d900-f4e3-472f-b729-7c759f1c8aa4" /><meta name="Description" content="OPC Unified Architecture is a platform-independent standard through which various kinds of systems and devices can communicate by sending messages between clients and servers over various types of networks." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems.<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems." tocid="roottoc">OPC Unified Architecture - specification applicable to manufacturing software in application areas such as Field Devices, Control Systems, Manufacturing Execution Systems and Enterprise Resource Planning Systems.</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e34055b2-23e0-4f1a-9e00-52d75becaeec.htm" title="Welcome to the OPC Unified Architecture e-book" tocid="e34055b2-23e0-4f1a-9e00-52d75becaeec">Welcome to the OPC Unified Architecture e-book</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/3774554f-8d12-4d9a-8532-85d704388d9d.htm" title="Concept" tocid="3774554f-8d12-4d9a-8532-85d704388d9d">Concept</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/d458d900-f4e3-472f-b729-7c759f1c8aa4.htm" title="Unified Architecture Overview" tocid="d458d900-f4e3-472f-b729-7c759f1c8aa4">Unified Architecture Overview</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/0fdc84ce-5ad9-45ce-a040-95478279f604.htm" title="Systems Integration" tocid="0fdc84ce-5ad9-45ce-a040-95478279f604">Systems Integration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/6c7e7e44-c957-4d09-b722-33c34539e875.htm" title="UA Systems Concepts" tocid="6c7e7e44-c957-4d09-b722-33c34539e875">UA Systems Concepts</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/14e03e6a-2c19-4124-8c10-aecd07121492.htm" title="Service Sets" tocid="14e03e6a-2c19-4124-8c10-aecd07121492">Service Sets</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Unified Architecture Overview</h1></td></tr></table><span class="introStyle"><A href="http://www.commsvr.com" title="OPC Unified Architecture" target="_blank">Home</A></span> <div class="summary"><p>OPC Unified Architecture is a platform-independent standard through which various kinds of systems and devices can communicate by sending messages between clients and servers over various types of networks. It supports robust, secure communication that assures the identity of clients and servers and resists attacks. OPC Unified Architecture defines sets of services that servers may provide, and individual servers specify to clients what service sets they support. Information is conveyed using OPC UA-defined and vendor-defined data types and servers define object models that clients can dynamically discover. Servers can provide access to both current and historical data, as well as alarms and events to notify clients of important changes. OPC UA can be mapped onto a variety of communication protocols and data can be encoded in various ways to trade off portability and efficiency.
    </p></div><div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#DesignGoals">Design goals</a></li><li class="outlineSectionEntry"><a href="#IntegratedModelsAndServices">Integrated models and services</a></li><li class="outlineSectionEntry"><a href="#Sessions">Sessions</a></li><li class="outlineSectionEntry"><a href="#Redundancy">Redundancy</a></li></ul><p>
      The main goal of the OPC Unified Architecture is to provide a consistent mechanism allowing for the integration of process control and management systems. To meet this goal, the Address Space concept is defined. The Address Space is intended to support integration by building common discipline, i.e. semantics (knowledge base) and vocabulary (representation base) - finally a language good enough to convey information up and down between levels of competence. The Address Space is a flexible real-time process environment modeling concept. Designing of a process model means that a description of the process is created. The challenge of the specification is to make this description unambiguous. Unique information representation must provide common understanding of the process behavior under control.
    </p><p>
      To integrate systems the possibility of describing the integration subject is only the necessary condition. But to make systems interoperable, we have to provide also information exchange. Because information is an abstract notion, it cannot be processed by physical machines. Therefore it has to be represented as computer centric data. Exchange also requires data transportation.
    </p><p>
      Therefore, to implement the Address Space, the OPC Unified Architecture provides:
    </p><ul><li><p>Information Model: to unambiguously represent information as computer centric data
        </p></li><li><p>Service Model: to transport data between communicating parties using modern network centric standards
        </p></li></ul></div><div class="collapsibleAreaRegion" id="DesignGoals"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Design goals</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
        OPC UA allows Servers to provide Clients with type definitions for the Objects accessed from the Address Space. This allows information models to be used to describe the contents of the Address Space. OPC UA allows data to be exposed in many different formats, including binary structures and XML documents. The data format may be defined by OPC, other standard organizations or vendors. Through the Address Space, Clients can query the Server for metadata that describes the data format. In many cases, Clients with no pre-programmed knowledge of the data formats will be able to determine the formats at runtime and properly utilize data. OPC UA adds support for many relationships between Nodes instead of being limited to just a single hierarchy. In this way, an OPC UA Server may present data in a variety of hierarchies tailored to the way a set of Clients would typically like to view data. This flexibility, combined with support for type definitions, makes OPC UA applicable to a wide array of problem domains. As illustrated below, OPC UA is not targeted at just the SCADA, PLC and DCS interface, but also as a way to provide greater interoperability between higher level functions.
      </p><div class="mediaCenter"><img alt="OPC UA Target Applications" src="../media/System_Concept_OPC_UA.jpg" /><div class="caption"><span class="captionLead">Figure 1:
						</span>OPC UA Target Applications</div></div><p>
        OPC UA is designed to provide robustness of published data. A major feature of all OPC servers is the ability to
        publish data and Event Notifications. OPC UA provides mechanisms for Clients to quickly detect and recover
        from communication failures associated with these transfers without having to wait for long timeouts provided by the
        underlying protocols. OPC UA is designed to support a wide range of Servers, from plant floor PLCs to enterprise Servers. Those Servers are characterized by a broad scope of size, performance, execution platforms and functional capabilities. Therefore, OPC UA defines a comprehensive set of capabilities, and Servers may implement a subset thereof. To promote interoperability, OPC UA defines subsets, referred to as Profiles, to which Servers may claim conformance. Clients can then discover the Profiles of a Server, and tailor their interactions with that Server based on the Profiles. Profiles are described in section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>. The OPC UA specifications are layered to isolate the core design from the underlying computing technology and network transport. This allows OPC UA to be mapped to future technologies as necessary, without negating the basic design. Mappings and data encodings are described in
        section <a href="90c70f9d-c1df-479e-8273-071b5960a5a4.htm">Mappings</a>. Two data encodings are defined in this part:
      </p><ul><li><p>XML/text</p></li><li><p>UA Binary</p></li></ul><p>In addition, two transport mappings are defined in this part:</p><ul><li><p>TCP</p></li><li><p>SOAP Web services over HTTP</p></li></ul><p>Clients and Servers that support multiple transports and encodings will allow the end users to make decisions about tradeoffs between performance and XML Web service compatibility at the time of deployment, rather than having these tradeoffs determined by the OPC vendor at the time of product definition.</p><p>OPC UA is designed as the migration path for OPC clients and servers that are based on Microsoft COM technology. Care has been taken in the design of OPC-UA so that existing data exposed by OPC COM servers (DA, HDA and AE) can easily be mapped and exposed via OPC UA. Vendors may choose to migrate their products natively to OPC UA or use external wrappers to convert from OPC COM to OPC UA and vice-versa. Each of the previous OPC specifications defined its own address space model and its own set of Services. OPC UA unifies the previous models into a single integrated address space with a single set of Services.</p></div><div class="collapsibleAreaRegion" id="IntegratedModelsAndServices"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Integrated models and services</span></div><div id="ID1RBSection" class="collapsibleSection"><p>This section contains the following subsections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#SecurityModel">Security model</a></li><li class="outlineSectionEntry"><a href="#IntegratedAddressSpaceModel">Integrated Address Space model</a></li><li class="outlineSectionEntry"><a href="#IntegratedObjectModel">Integrated object model</a></li><li class="outlineSectionEntry"><a href="#IntegratedServices">Integrated services</a></li></ul><p /><h4 class="subHeading" id="SecurityModel">Security model</h4><div class="subsection"><p>This section contains the following subsections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#General">General</a></li><li class="outlineSectionEntry"><a href="#DiscoveryAndSessionEstablishment">Discovery and Session establishment</a></li><li class="outlineSectionEntry"><a href="#Auditing">Auditing</a></li><li class="outlineSectionEntry"><a href="#TransportSecurity">Transport security</a></li></ul><h4 class="subHeading" id="General">General</h4><div class="subsection"><p>OPC Unified Architecture security is concerned with the authentication of clients and servers, the authentication of users, the integrity and confidentiality of their communications, and the verifiability of claims of functionality. It does not specify the circumstances under which various security mechanisms are required. That specification is crucial, but it is made by the designers of the system at a given site and may be specified by other standards. Rather, OPC Unified Architecture provides a security model, defined in <a href="bf124b83-10b9-4995-af26-178e5fc9a6e7.htm">Security Model</a>, in which security measures can be selected and configured to meet the security needs of a given installation.
                This model includes security mechanisms and parameters. In some cases, the mechanism for exchanging security
                parameters is defined, but the way that applications use these parameters is not. This framework also defines
                a minimum set of security Profiles that all UA Servers support, even though they may not be used in all installations.
                Security Profiles are described in
                section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>.
              </p></div><h4 class="subHeading" id="DiscoveryAndSessionEstablishment">Discovery and Session establishment</h4><div class="subsection"><p>
                Application level security relies on a secure communication channel that is active for the duration of the application
                Session and ensures the integrity of all Messages that are exchanged. This means users need to be authenticated only
                once, when the application Session is established. The mechanisms for discovering OPC UA Servers and establishing secure
                communication channels and application Sessions are described in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>
                and
                section <a href="90c70f9d-c1df-479e-8273-071b5960a5a4.htm">Mappings</a>.
                Additional information about the Discovery process is described in
                section <a href="6331c6ab-b475-491a-8738-43edae0ed6bc.htm">Discovery</a>
                when a Session is established, the Client and Server applications negotiate a secure communications channel and
                exchange software Certificates that identify the Client and Server and the capabilities that they provide.
                Authority-generated software Certificates indicate the OPC UA Profiles that the applications implement and the
                OPC UA certification level reached for each Profile. The details of each Profile and the Certificates are described
                in
                section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>.
                Certificates issued by other organizations may also be exchanged during Session establishment. The Server further
                authenticates the user and authorizes subsequent requests to access Objects in the Server. Authorization mechanisms,
                such as access control lists, are not specified by the OPC Unified Architecture specification. They are application or system-specific.
              </p></div><h4 class="subHeading" id="Auditing">Auditing</h4><div class="subsection"><p>OPC Unified Architecture includes support for security audit trails with traceability between Client and Server audit logs. If a security-related problem is detected at the Server, the associated Client audit log entry can be located and examined.
                OPC UA also provides the capability for Servers to generate Event Notifications that report auditable Events to Clients
                capable of processing and logging them. OPC UA defines security audit parameters that can be included in audit log
                entries and in audit Event Notifications.
                Section <a href="3f999f23-4ad7-46a4-80dd-ab33729d5f49.htm">Information Model</a> describes the data types for these parameters. Not all Servers and Clients provide all of the auditing features.
                Profiles, found in section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>, indicate which features are supported.
              </p></div><h4 class="subHeading" id="TransportSecurity">Transport security</h4><div class="subsection"><p>
                OPC UA security complements the security infrastructure provided by most web service capable platforms. Transport level security can be used to encrypt and sign Messages. Encryption and signatures protect against disclosure of information and protect the integrity of Messages. Encryption capabilities are provided by the underlying communications technology used to exchange Messages between OPC UA applications.
                Section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>
                defines the encryption and signature algorithms to be used for a given Profile.
              </p></div></div><h4 class="subHeading" id="IntegratedAddressSpaceModel">Integrated Address Space model</h4><div class="subsection"><p>
            The set of Objects and related information that the OPC UA Server makes available to Clients is referred to as its
            Address Space. The OPC UA Address Space represents its contents as a set of Nodes connected by References.
          </p><p>
            Primitive characteristics of Nodes are described by OPC-defined Attributes. Attributes are the only elements of a
            Server that have data values. Data types that define attribute values may be simple or complex.
          </p><p>
            Nodes in the Address Space are typed according to their use and their meaning. Node Classes define metadata for the
            OPC UA Address Space. Section <a href="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm">Address Space</a>
            showes the OPC UA Node Classes.
          </p><p>
            The <a href="467e8ac2-46d8-4758-8965-a891200787ee.htm">Base</a>node class defines Attributes common to all Nodes, allowing identification, classification and naming.
            Each Node Class inherits these Attributes and may additionally define its own Attributes.
          </p><p>
            To promote interoperability of Clients and Servers, the OPC UA Address Space is structured hierarchically with the top
            levels the same for all Servers. Although Nodes in the Address Space are typically accessible via the hierarchy,
            they may have References to each other, allowing the Address Space to represent an interrelated network of Nodes.
            The model of the Address Space is defined insection <a href="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm">Address Space</a>.
          </p><p>
            OPC UA Servers may subset the Address Space into Views to simplify Client access.
          </p></div><h4 class="subHeading" id="IntegratedObjectModel">Integrated object model</h4><div class="subsection"><p>
            The OPC UA Object Model provides a consistent, integrated set of Node Classes for representing Objects in the Address Space. This model represents Objects in terms of their Variables, Events and Methods, and their relationships with other Objects.
            Section <a href="58e663ae-9e77-4a9b-9adc-cbc18c4d7e9e.htm">Address Space</a>
            describes this model. The OPC UA object model allows Servers to provide type definitions for Objects and their components. Type definitions may be subclassed. They also may be common or they may be system-specific. Object Types may be defined by standards organizations, vendors or end-users. This model allows data, Alarms and Events, and their history to be integrated into a single OPC UA Server. For example, OPC UA Servers are able to represent a temperature transmitter as an Object that is composed of a temperature value, a set of alarm parameters, and a corresponding set of alarm limits.
          </p></div><h4 class="subHeading" id="IntegratedServices">Integrated services</h4><div class="subsection"><p>
            The interface between OPC UA Clients and Servers is defined as a set of Services. These Services are organized into logical groupings called Service Sets. Service Sets are discussed in <a href="14e03e6a-2c19-4124-8c10-aecd07121492.htm">Service Sets</a> and described in
            section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>.
          </p><p>
            OPC UA Services provide two capabilities to Clients. They allow Clients to issue requests to Servers and receive
            responses from them. They also allow Clients to subscribe to Servers for Notifications. Notifications are used by the
            Server to report occurrences such as Alarms, data value changes,
            Events, and Program execution results.
          </p><p>
            OPC UA Messages may be encoded as XML text or in binary format for efficiency purposes.
            They may be transferred using multiple underlying transports, for example TCP or web services over HTTP.
            Servers may provide different encodings and transports as described by
            section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>.
          </p></div></div><div class="collapsibleAreaRegion" id="Sessions"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Sessions</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
        OPC UA requires a stateful model. The state information is maintained inside an application Session. Examples of state-information are Subscriptions, user credentials and continuation points for operations that span multiple requests.
      </p><p>
        Sessions are defined as logical connections between Clients and Servers. Servers may limit the number of concurrent Sessions based on resource availability, licensing restrictions, or other constraints. Each Session is independent of the underlying communications protocols. Failures of these protocols do not automatically cause the Session to terminate. Sessions terminate based on Client or Server request, or based on inactivity of the Client. The inactivity time interval is negotiated during Session establishment.
      </p></div><div class="collapsibleAreaRegion" id="Redundancy"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Redundancy</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
        The design of OPC UA ensures that vendors can create redundant Clients and redundant Servers in a consistent manner.
        Redundancy may be used for high availability, fault tolerance and load balancing. The details for redundancy are found in section <a href="ef0092b5-9f31-4e8d-9901-270be06e6577.htm">Services</a>.
        Only some Profiles (section <a href="69c22282-3ad0-4937-8982-4d5c5ac95b7f.htm">Profiles</a>),
        will require redundancy support, but not the base Profile.
      </p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.commsvr.com/" target="_blank">Copyright (c) 2020 Mariusz Postol</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:techsupp%40cas.eu?Subject=OPC%20Unified%20Architecture%20-%20specification%20applicable%20to%20manufacturing%20software%20in%20application%20areas%20such%20as%20Field%20Devices,%20Control%20Systems,%20Manufacturing%20Execution%20Systems%20and%20Enterprise%20Resource%20Planning%20Systems.">CAS</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>